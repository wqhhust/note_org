* linux
** monitor
*** check system log
many logs are under the directory of /var/log/
and we could get the system log from /var/log/messages.
** performance
*** get process status
http://unix.stackexchange.com/questions/245827/spstack-ptrace-stopped-a-process
+ ps aux
+ grep State: /proc/the-pid/status. Is it State: T (stopped) or State:	t (tracing stop) ?
*** perf
perf record -g -e cpu-clock -p PID
https://perf.wiki.kernel.org/index.php/Main_Page
https://fritshoogland.wordpress.com/2013/11/24/when-the-oracle-wait-interface-isnt-enough/
*** ptrace/pstack
https://idea.popcount.org/2012-12-11-linux-process-states/
*** cgroup
https://en.wikipedia.org/wiki/Cgroups
*** network traffic
**** monitor tranfic by application
http://raboof.github.io/nethogs/
on cenots/redhat
yum install nethogs

command after installation:  nethogs network-card-name, such as nethogs eth1
* database
** SQL Server
*** performance
**** get the running SQL
#+BEGIN_SRC sql
  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
  SELECT  er.wait_time/1000/60.0 wait_time_in_minutes,er.statement_end_offset, [Individual Query] = SUBSTRING(qt.text, er.statement_start_offset / 2,
                                         ( CASE WHEN er.statement_end_offset = -1
                                                THEN LEN(CONVERT(NVARCHAR(MAX), qt.text))
                                                     ,* 2
                                                ELSE er.statement_end_offset
                                           END - er.statement_start_offset ) / 2) ,
          [Parent Query] = qt.text ,
          Program = program_name ,
          db_name(database_id) as 'database name',
          session_id,
          Hostname ,
          nt_domain ,
          start_time,
          er.status,
          er.wait_resource,
          er.wait_type,
          pl.*
  FROM    sys.dm_exec_requests er
          INNER JOIN sys.sysprocesses sp ON er.session_id = sp.spid
          CROSS APPLY sys.dm_exec_sql_text(er.sql_handle) AS qt
          CROSS APPLY sys.dm_exec_query_plan(er.plan_handle) AS pl
  WHERE   session_Id > 50              -- Ignore system spids.
          AND session_Id NOT IN ( @@SPID )     -- Ignore this current statement.
              --and db_name(database_id)='KRAFT_GROCERY_WINN_DIXIE'
  ORDER BY 1 , 2
#+END_SRC
** vertica
*** admin
**** force startup
try to start the node with force option from below command, it will remove corrupted blocks(data) from the node and will recover from its buddy node

To Start Node with force option:
----------------------------------------------

$ admintools -t restart_node -s <node1 ip> -d <dbname> -F
**** check recover status/progress
select * from recovery_status where is_running
**** Clears the HP Vertica internal cache files.
https://my.vertica.com/docs/7.1.x/HTML/Content/Authoring/SQLReferenceManual/Functions/VerticaFunctions/CLEAR_CACHES.htm
=> SELECT CLEAR_CACHES();
 CLEAR_CACHES
--------------
 Cleared
(1 row)
**** flush/clear data collector
https://my.vertica.com/docs/7.1.x/HTML/Content/Authoring/SQLReferenceManual/Functions/VerticaFunctions/DataCollection/FLUSH_DATA_COLLECTOR.htm
=> SELECT flush_data_collector('ResourceAcquisitions');
 flush_data_collector
----------------------
 FLUSH
(1 row)
https://my.vertica.com/docs/7.1.x/HTML/Content/Attic/Troubleshooting/WorkingWithDataCollectionLogs.htm
=> SELECT clear_data_collector('ResourceAcquisitions');
 clear_data_collector
----------------------
 CLEAR
(1 row)
**** list/enable services
select list_services('TM')
select list_services('SYSTEM')

function of enable_service()
*** monitoring
**** some sqls
#+BEGIN_SRC sql
select * from query_profiles where is_executing;

select transaction_id,time - grant_time held_time from dc_lock_releases where object_name ilike '%global%' and mode ilike 'X' order by 2 desc; 

select * from dc_requests_issued where transaction_id = 63050395011493021; 

select request, pool_name, now(), start_timestamp from resource_queues a inner join  query_requests  b on a.transaction_id=b.transaction_id and a.statement_id=b.statement_id limit 10000;

select * from RESOURCE_REJECTIONS;

SELECT * FROM QUERY_PROFILES;

select * from RESOURCE_REJECTION_DETAILS order by REJECTED_TIMESTAMP desc

select * from dc_requests_retried

select * from resource_queues; 

select * from resource_acquisitions  where is_executing;

select * from system_resource_usage order by end_time desc limit 30; 

select * from vs_tuple_mover_operations; 

select list_services('TM'); 


select request, pool_name, now(), start_timestamp from resource_queues a inner join  query_requests  b on a.transaction_id=b.transaction_id and a.statement_id=b.statement_id limit 10000;

SELECT transaction_id,
       pool_name,
       memory_inuse_kb,
       queue_entry_timestamp,
       acquisition_timestamp,
       release_timestamp,
       datediff(ms,queue_entry_timestamp,acquisition_timestamp) as queue_time,
       datediff(ms,acquisition_timestamp,release_timestamp) as execution_time,
       duration_ms
FROM resource_acquisitions order by 9 desc limit 10


select * from error_messages order by event_timestamp desc;

select time,transaction_id,node_name,time-grant_Time as duration, object_name,mode from dc_lock_releases 
    where object_name ilike '%Catalog' order by duration desc limit 50;

select node_name,operator_name,path_id,localplan_id,counter_name,max(counter_value) 
from dc_execution_engine_profiles where transaction_id=<> and statement_id= <> 
and (counter_name ilike '%(us)%' or 
counter_name ilike '%time%') and node_name ilike '%node0001%' group by 1,2,3,4,5 order by 3,4; 

select node_name,execution_step,(completion_time-time) as time_taken 
from dc_query_executions where transaction_id='<>' and statement_id= <> order by 1,2 desc; 
#+END_SRC
**** some tips
+ Did you check if any specific session is running from long time ? 
+ Any Tuple mover operations are running for long ? 
+ Any resource starvation? Means anything queuing for resources? 
+ At OS level, are there any high CPU/memory/IO utilizations seen in TOP,SAR,VMSTAT outputs for each node. 
+ What is the status shown in system_resource_usage for all the resources nodewise? 
*** partitions
**** partition switch
#+BEGIN_SRC sql 
drop table  if exists t1_daniel;
create table t1_daniel (a int not null) UNSEGMENTED all nodes  partition by (a) ;
insert/*+ direct */ into t1_daniel values (1);
insert/*+ direct */ into t1_daniel values (1);
insert/*+ direct */ into t1_daniel values (1);
insert /*+ direct */into t1_daniel values (2);
insert/*+ direct */ into t1_daniel values (3);
drop table  if exists t2_daniel;
create table t2_daniel (a int not null) UNSEGMENTED all nodes  partition by (a) ;
insert/*+ direct */  into t2_daniel select * from t1_daniel;

select * from storage_containers where projection_name like '%daniel%' and node_name='v_fusion_node0001' order by projection_name

SELECT SWAP_PARTITIONS_BETWEEN_TABLES ( 't2_daniel', 1, 2, 't1_daniel');

SELECT MERGE_PARTITIONS('t2_daniel', 1, 1);

#+END_SRC
*** global catalog
**** global catalog size

#+BEGIN_SRC sql
SELECT node_name,
       MAX(ts) AS ts,
       MAX(catalog_size_in_MB) AS catlog_size_in_MB
FROM (SELECT node_name,
             trunc((dc_allocation_pool_statistics_by_second."time")::TIMESTAMP,'SS'::VARCHAR(2)) AS ts,
             SUM((dc_allocation_pool_statistics_by_second.total_memory_max_value - dc_allocation_pool_statistics_by_second.free_memory_min_value)) /(1024*1024) AS catalog_size_in_MB
      FROM dc_allocation_pool_statistics_by_second
      GROUP BY 1,
               trunc((dc_allocation_pool_statistics_by_second."time")::TIMESTAMP,'SS'::VARCHAR(2))) foo
GROUP BY 1
ORDER BY 1

#+END_SRC
*** locks
**** temp table use less or no global catalog locks
#+BEGIN_SRC sql 
drop table if exists aaa;
select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;
create local temp table aaa  ON COMMIT PRESERVE ROWS as select * from locks where 0=1;
select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;
insert into aaa select * from locks;
select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;

select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;
drop table if exists aaa;
create table aaa   as select * from locks where 0=1;
select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;
insert into aaa select * from locks;
select object_name,mode,count(*) from dc_lock_attempts where session_id=CURRENT_SESSION()  group by object_name,mode;

#+END_SRC
**** SQL to check perfomrance from profile data
#+BEGIN_SRC SQL


#+END_SRC
**** lock checking
#+BEGIN_SRC sql

SELECT TIME,
       a.transaction_id,
       a.node_name,
       extract(seconds from  (time- grant_time)) AS duration,
       a.object_name,
       a.mode,
       b.description,
       b.user_name,
       b.*,
       a.*
FROM dc_lock_releases a inner join transactions b on a.transaction_id = b.transaction_id
WHERE object_name ilike '%Catalog'
ORDER BY  duration DESC limit 500;

#+END_SRC
*** performance
**** queries info

#+BEGIN_SRC sql

select * from query_requests where is_executing;

#+END_SRC
**** tools
***** vioperf
https://my.vertica.com/docs/7.1.x/HTML/Content/Authoring/InstallationGuide/scripts/vioperf.htm
*** profile
**** analysis
#+BEGIN_SRC sql 

drop table if exists daniel;

create table daniel as Select * from v_monitor.execution_engine_profiles where transaction_id=54043195811153523 and statement_id=1;

select "trx/stm",operator_name,path_id,
"max execution time(sec)","max clock time (sec)",
"max estimated rows produced","max rows produced",
"sum rows produced",
"sum estimated rows produced",
"sum estimated rows produced"-"sum rows produced" as "total Rows Diff",
--"max rows diff",
"max memory reserved (MB)" ,
"max memory allocated (MB)","sum memory reserved (MB)","sum memory allocated (MB)", num_thread
from (
select transaction_id||' / '||statement_id as "trx/stm",
operator_name,path_id,
max(decode(counter_name,'execution time (us)',counter_value,null))/1000000 as "max execution time(sec)",
max(decode(counter_name,'clock time (us)',counter_value,null))/1000000 as "max clock time (sec)",
max(decode(counter_name,'estimated rows produced',counter_value,null))as "max estimated rows produced",
max(decode(counter_name,'rows produced',counter_value,null))as "max rows produced",
max(decode(counter_name,'memory reserved (bytes)',counter_value/1024/1024,null))as "max memory reserved (MB)",
max(decode(counter_name,'memory allocated (bytes)',counter_value/1024/1024,null))as "max memory allocated (MB)",
sum(decode(counter_name,'execution time (us)',counter_value,null))/1000000 as "sum execution time(sec)",
sum(decode(counter_name,'clock time (us)',counter_value,null))/1000000 as "sum clock time (sec)",
sum(decode(counter_name,'estimated rows produced',counter_value,null))as "sum estimated rows produced",
sum(decode(counter_name,'rows produced',counter_value,null))as "sum rows produced",
sum(decode(counter_name,'memory reserved (bytes)',counter_value/1024/1024,null))as "sum memory reserved (MB)",
sum(decode(counter_name,'memory allocated (bytes)',counter_value/1024/1024,null))as "sum memory allocated (MB)",
sum(decode(counter_name,'clock time (us)',1,null)) num_thread
--,max(abs(decode(counter_name,'estimated rows produced',counter_value,null) - decode(counter_name,'rows produced',counter_value,null))) "max rows diff"
from daniel
where
--and counter_value/1000000 > 0 and 
counter_name in('execution time (us)','clock time (us)','estimated rows produced','rows produced','memory reserved (bytes)','memory allocated (bytes)')
group by transaction_id||' / '||statement_id,operator_name,path_id ) a
order by 4 desc
;

#+END_SRC
*** directed query
#+BEGIN_SRC sql

CREATE DIRECTED QUERY OPTIMIZER 'daniel' 
select ....;

select * From directed_queries;
#+END_SRC
*** good document
**** from twitter
https://github.com/jackghm/Vertica/wiki/HP-Vertica-Tips,-Tricks,-and-Best-Practices
https://github.com/jackghm/Vertica/wiki/Optimize-Tables-Not-Queries
**** from HP
https://github.com/pomaster/vertica-workload-tracking-util
*** plan
**** Unc
in the plan local verbose,
Unc 表示 unencoded data column, 是相对于 RLE 列来说的.
*** resource pool
**** plannedconcurrency & query_budget_kb
http://vertica-forums.com/viewtopic.php?t=1441&start=7
http://vertica-forums.com/viewtopic.php?f=44&t=1441&sid=152b9965d87731282e8a309c2eebe139&start=14

You can set the QUEUETIMEOUT of the resource pool to be longer if you would like the loads to wait for longer before timing out.

When you increase PLANNEDCONCURRENCY, you decrease the QUERY_BUDGET_KB that shows in RESOURCE_POOL_STATUS. The "query budget" is the amount of memory that a query will "target" using but it's not necessarily the amount that the query will use:

- simple queries without an ORDER BY or where the ORDER BY matches a projection's ORDER BY will use very little memory - they don't need to sort for example

- queries with "externalizing operators" - that is, operators that can spill to disk - sort, group by, hash join - will start with a default buffer size for all operators and will then split the remaining memory among the externalizing operators up to the "query budget" 

- if the minimum buffer size for all operators exceeds the "query budget", then the query will use more than the "query budget".

Because simple queries use less memory, you can actually run more queries concurrently than PLANNEDCONCURRENCY. That's where MAXCONCURRENCY can be used to put an actual limit on the number of concurrent queries.

In the case of your COPY statements, it sounds like they are all using the "query budget". 

Be aware that when you make PLANNEDCONCURRENCY higher, and thus the "query budget" smaller, you are forcing the sorts for COPY to get less memory, and they will have to spill more to disk, so they will be slower. 

As already stated, Vertica wants 2GB of memory per core, and you're running with less than that. 16GB is really on the low end for a vertica cluster.
** Theory
http://slideshot.epfl.ch/play/suri_stonebraker
** postgresql
http://bluetreble.com/2015/12/mongodbs-bi-connector-postgres/
http://theplateisbad.blogspot.com/2015/12/the-mongodb-bi-analytics-connector.html
*** de-duplication, remove duplicated row 
#+BEGIN_SRC sql
delete
FROM bidding_history
WHERE ctid IN ((SELECT ctid
                FROM (SELECT ROW_NUMBER() OVER (PARTITION BY bidding_id) idx,
                             ctid
                      FROM bidding_history) x
                WHERE idx > 1))
#+END_SRC
*** backup & recover
**** backup
 pg_dump --host localhost --port 5432 --username test >db.sql
**** restore
psql --host localhost --port 5434 --username test -f db.sql test
*** client using emacs
http://stackoverflow.com/questions/26677909/emacs-sql-mode-postgresql-and-inputing-password
https://wiki.postgresql.org/wiki/Pgpass
* lang
** python
*** scrapy
**** orc                                                             :orc:
https://webscraping.com/blog/Solving-CAPTCHA/
https://webscraping.com/blog/Automating-CAPTCHAs/
http://deathbycaptcha.com/user/faq
**** browsercookie                             :cookie:login:save:session:
Loads cookies from your browser into a cookiejar object so can download with urllib and other libraries the same content you see in the web browser.
https://pypi.python.org/pypi/browsercookie
https://bitbucket.org/richardpenman/browsercookie
**** How to crawl websites without being blocked

Speed
If you download 1 webpage a day then you will not be blocked but your crawl would take too long to be useful. If you instead used threading to crawl multiple URLs asynchronously then they might mistake you for a DOS attack and blacklist your IP. So what is the happy medium? The wikipedia article on web crawlers currently states Anecdotal evidence from access logs shows that access intervals from known crawlers vary between 20 seconds and 34 minutes. This is a little slow and I have found 1 download every 5 seconds is usually fine. If you don't need the data quickly then use a longer delay to reduce your risk and be kinder to their server.

Identity
Websites do not want to block genuine users so you should try to look like one. Set your user-agent to a common web browser instead of using the library default (such as wget/version or urllib/version). You could even pretend to be the Google Bot (only for the brave): Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
If you have access to multiple IP addresses (for example via proxies, proxy) then distribute your requests among them so that it appears your downloading comes from multiple users.

Consistency
Avoid accessing webpages sequentially: /product/1, /product/2, etc. And don't download a new webpage exactly every N seconds. Both of these mistakes can attract attention to your downloading because a real user browses more randomly. So make sure to crawl webpages in an unordered manner and add a random offset to the delay between downloads.

Following these recommendations will allow you to crawl most websites without being detected.
**** Python Scrapy tutorial KeyError: 'Spider not found:
http://stackoverflow.com/questions/26359598/python-scrapy-tutorial-keyerror-spider-not-found
**** How to teach yourself web scraping



https://webscraping.com/blog/How-to-teach-yourself-web-scraping/

*** database
**** postgresql
***** install python driver for postgresql

*** functional
**** TODO transducer
http://sixty-north.com/blog/deriving-transducers-from-first-principles
** java
*** top blogger
http://www.programcreek.com/2012/11/top-100-java-developers-blogs/
** powershell
*** security issue ExecutionPolicy:
powershell -ExecutionPolicy ByPass -File script.ps1
this is less useful. Better to use the above one
Set-ExecutionPolicy RemoteSigned
** clojure
*** boot
**** manually download boot
if manually download the boot.jar, then just put it under the correct folder, then boot will find them under these folds, if can't find it will then try to download it automatically

oracle@SomeHost ~/.boot $ cat boot.properties 
BOOT_CLOJURE_NAME=org.clojure/clojure
BOOT_VERSION=2.5.5
BOOT_CLOJURE_VERSION=1.8.0
#BOOT_JVM_OPTIONS="-Dhttp.proxyHost=127.0.0.1 -Dhttp.proxyPort=8087 -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=8087"

oracle@SomeHost ~/.boot/cache/bin $ tree
.
├── 2.4.2
│   ├── boot1133127694768844380.jar
│   └── boot6675944551114486971.jar
├── 2.5.2
│   ├── boot212976671301937065.jar
│   ├── boot2495592243726006254.jar
│   ├── boot2774136939659078183.jar
│   ├── boot3704565577884391836.jar
│   ├── boot4249403466279405105.jar
│   ├── boot4451132883056568743.jar
│   ├── boot7949930609941258502.jar
│   └── boot8606978147581365130.jar
└── 2.5.5
    └── boot.jar
*** hiccup
https://clojurebridge.github.io/community-docs/docs/web-applications/hiccup/

https://github.com/yokolet/hiccup-samples

http://www.tuicool.com/articles/muQfy2

*** stacktrace
https://github.com/mmcgrana/clj-stacktrace
If you use Leiningen, you can install clj-stacktrace on a user-wide basis. Just add the following to ~/.lein/profiles.clj:

#+BEGIN_SRC clojure
{:user {:dependencies [[clj-stacktrace "0.2.8"]]
        :injections [(let [orig (ns-resolve (doto 'clojure.stacktrace require)
                                            'print-cause-trace)
                           new (ns-resolve (doto 'clj-stacktrace.repl require)
                                           'pst)]
                       (alter-var-root orig (constantly (deref new))))]}}
#+END_SRC

*** nREPL
**** use nREPL inside legacy java
http://dev.theladders.com/2013/04/getting-some-clojure-nrepl-in-a-spring-app/
http://blog.avisi.nl/2015/05/18/how-to-inspect-a-legacy-java-application-with-the-clojure-repl/
#+BEGIN_SRC java
package nl.avisi.jira;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

import com.atlassian.jira.component.ComponentAccessor;

import clojure.java.api.Clojure;
import clojure.lang.IFn;

public class MyBean implements InitializingBean, DisposableBean {

    @Override
    public void afterPropertiesSet() throws Exception {
      IFn plus = Clojure.var("clojure.core", "+");
      Object object = plus.invoke(1, 2);
      LOGGER.debug("plus invoked, result was: " + object);

      IFn require = Clojure.var("clojure.core", "require");
      require.invoke(Clojure.read("clojure.tools.nrepl.server"));
      
      IFn server = Clojure.var("clojure.tools.nrepl.server", "start-server");
      server.invoke();
    }

}
#+END_SRC
Our code does not specify a port, so you need to find out what port the repl is using (use netstat -a | grep LISTEN or the likes). When you know the port, connect to the repl with leiningen:

○ → LEIN_REPL_PORT=33475 lein repl :connect                                                                                                                                                                                             
Connecting to nREPL at 127.0.0.1:33475
REPL-y 0.3.5, nREPL 0.2.10
Clojure 1.6.0
Java HotSpot(TM) 64-Bit Server VM 1.7.0_60-b19
    Docs: (doc function-name-here)
          (find-doc "part-of-name-here")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e

user=>
**** use nREPL inside clojure app
**** socket REPL in clojure 1.8
 You can change the lein repl version to 1.8.0 via
           https://github.com/technomancy/leiningen/blob/master/doc/PROFILES.md#replacing-default-repl-dependencies
           and then run something like `JVM_OPTS='-Dclojure.server.repl={:port 5555 :accept clojure.core.server/repl}' lein repl`
*** IO
read: slurp,  write: spit
user=> (spit "blubber.txt" "test")
nil
user=> (slurp "blubber.txt")
"test"

*** jdbc
**** insert/update timestamp
http://stackoverflow.com/questions/9305541/clojure-jdbc-postgresql-i-am-trying-to-update-a-timestamp-value-in-postgresql-f

Use [clj-time "0.3.6"] as the dependency specifier in your project.clj if you decide to use clj-time.
#+BEGIN_SRC clojure
(require '[clj-time [format :as timef] [coerce :as timec]])

(->> "Thu Feb 09 10:38:01 +0000 2012"
     (timef/parse (timef/formatter "EEE MMM dd HH:mm:ss Z yyyy"))
     timec/to-timestamp)
#+END_SRC
or
#+BEGIN_SRC clojure
(java.sql.Timestamp/valueOf "2004-10-19 10:23:54")
#+END_SRC

You'll need to pass in a java.sql.Timestamp instance. To parse your string into one using clj-time, a Joda-Time-wrapping library for Clojure, you'd do something along the following lines:

(require '[clj-time [format :as timef] [coerce :as timec]])
(->> "Thu Feb 09 10:38:01 +0000 2012"
     (timef/parse (timef/formatter "EEE MMM dd HH:mm:ss Z yyyy"))
     timec/to-timestamp)
The returned value can then be passed to PostgreSQL via JDBC.

In case you're obtaining the date in some other string format and converting it to this one, you could skip the conversion and provide an appropriate formatter for the original representation. There are quite a few available by default in the clj-time.format/formatters map, say (clj-time.format/show-formatters) at the REPL to see a list with examples. Also, clj-time.coerce/from-string tries all default formatters in sequence returning the value of the first succeeding parse (nil if there is none). If you're obtaining the date as a java.util.Date or a long, see from-date and from-long in the same namespace.


Alternatively, you could use some other way of parsing your timestamp string into a java.sql.Timestamp; Timestamp itself can parse a different string representation:

(java.sql.Timestamp/valueOf "2004-10-19 10:23:54")
clj-time is the most sane way of dealing with date and time in Clojure, though, so it's likely to be worth your while.
*** java object
**** how to get a field from a java object
for example: the following is an Element whole webelement field is nil, then how to check whether an object whose name id td hsa webelement as nil?
#clj_webdriver.element.Element{:webelement nil}
use the following: just use the keyword to get the field of that object.
(nil? (:webelement td))
*** parse int, float
Float/parseFloat
Integer/parseInt
*** destruct
http://blog.brunobonacci.com/2014/11/16/clojure-complete-guide-to-destructuring/
**** map destruct                                               :destruct:
(defn find-team-member[ {:keys [min max]} ] 
	(println min max))
*** dynamic scoping
http://clojure.org/vars
https://blog.rjmetrics.com/2012/01/11/lexical-vs-dynamic-scope-in-clojure/
http://blog.josephwilk.net/clojure/isolating-external-dependencies-in-clojure.html
http://squirrel.pl/blog/2012/09/13/careful-with-def-in-clojure/
https://www.reddit.com/r/Clojure/comments/zty5f/careful_with_def_in_clojure/c67uovl
http://stackoverflow.com/questions/940712/redefining-a-letd-variable-in-clojure-loop
**** def 
 http://stackoverflow.com/questions/16447621/difference-between-using-def-to-update-a-var-and-alter-var-root
*** tranduce
http://stackoverflow.com/questions/34238843/transduce-why-this-transduce-doesnt-print-anything
Composition of the transformer runs right-to-left but builds a transformation stack that is applied left-to-right (filtering happens before mapping in this example).
the following code return empty, since it first run take-while and then run map

#+BEGIN_SRC clojure
(transduce (comp (take-while true?)
                     (map (fn[x] (println x) true))
                     )
               conj
               []
               (map inc (range 4)))
#+END_SRC
 
*** good tips
**** how to get multiple value out for a map
#+BEGIN_SRC clojure
(map {:a 1 :b 2 :c 3} [:a :c])
#+END_SRC
**** how to convert [1 2 3 [4 5]] to [1 2 3 4 5]
2 solutions, and flatten could be use for a vector anywhere in the list, instead of only in the end of the list.
#+BEGIN_SRC clojure
  (apply list* [1 2 3 [4 5]])
  (flatten [1 2 3 [4 5]])
#+END_SRC
or flatten
**** how to call (j/execute! db ["sql" a-vector]
(j/execute! db (concat ["sql"] a-vector))
**** get YYYYMMDD for a period
#+BEGIN_SRC clojure
(:require [clj-time.core :as time]
          [clj-time.format :as f])
(f/unparse (f/formatter "yyyyMMdd") (time/now))
(f/unparse (f/formatter "yyyyMMdd") (time/plus (time/now) (time/days 1)))
#+END_SRC
**** select an element from a class
{:xpath "//table[@class='someclass']"}
**** select an element contains some text
//*[contains(text(),'ABC')]
http://stackoverflow.com/questions/3655549/xpath-containstext-some-string-doesnt-work-when-used-with-node-with-more
**** how to pick up one element from an element map
http://stackoverflow.com/questions/35774358/clojure-how-to-pick-up-one-item-with-the-most-high-value-from-a-map
#+BEGIN_SRC clojure

(defn pickup-account [accounts ppdai-e-level?]
  (let [valid-accounts (into {} (filter (fn[x] (if ppdai-e-level? (-> x val :E-level-enabled?) true)) accounts))]
    (if (seq valid-accounts)
      (into {} [(apply max-key (comp :amount val) valid-accounts)])
      nil)))


(pickup-account {:user1 {:amount 1000 :E-level-enabled? false} :user2 {:amount 50 :E-level-enabled? true} :user3 {:amount 500 :E-level-enabled? true}} true)
(pickup-account {:user1 {:amount 1000 :E-level-enabled? false} :user2 {:amount 50 :E-level-enabled? true} :user3 {:amount 500 :E-level-enabled? true}} false)


#+END_SRC
**** select an element for a class and with certain text
//span[contains(@class, 'myclass') and text() = 'qwerty']
//span[contains(@class, 'myclass') and normalize-space(text()) = 'qwerty']
http://stackoverflow.com/questions/16466083/html-xpath-searching-by-class-and-text
**** select an element after an elemnt containing some text
the last p means select the p node after the p node containing 历史统计
//p[contains(text(),'历史统计')]/following-sibling::p
**** select an element based on the child element
(find-element {:xpath "//i[@class='xueli']/parent::*"})
**** how to update an element in a vector
(update-in [1 2 3] [1] inc)
(assoc [1 2 3] 1 5)
http://stackoverflow.com/questions/12628286/simple-way-to-replace-nth-element-in-a-vector-in-clojure
**** get sub vector from a vector



if the index of the subvec is continous,  then just use the function of subvec
#+BEGIN_SRC clojure
(let [a [11 22 33 44]
      b [1 3]]
  (mapv a b))
#+END_SRC
**** how to split vector bases on index:  [1 2 3 5 6 7] into [1 3 6] [2 5 7]
#+BEGIN_SRC clojure
(apply map list (partition-all 2 [1 2 3 5 6 7]))
#+END_SRC
*** threading first/last                                          :threading:
**** good artical
http://ianrumford.github.io/blog/2014/10/24/some-syntactic-sugar-for-clojure-threading-macros/
http://blog.jayfields.com/2012/09/clojure-refactoring-from-thread-last-to.html
http://www.spacjer.com/blog/2015/11/09/lesser-known-clojure-variants-of-threading-macro/
*** core.async

**** starting point
http://www.braveclojure.com/core-async/
http://elbenshira.com/blog/using-core-async-for-producer-consumer-workflows/
**** blogs
http://clojure.com/blog/2013/06/28/clojure-core-async-channels.html
http://martintrojer.github.io/clojure/2013/07/07/coreasync-and-blocking-io/
http://hueypetersen.com/posts/2013/07/10/code-read-of-core-async-timeouts/
http://stuartsierra.com/2013/12/08/parallel-processing-with-core-async
http://www.laliluna.com/articles/2014/04/28/clojure-async-kindergarden-party.html
**** good site
http://martintrojer.github.io/tags.html#core.async-ref
**** deep understanding
***** how to understand alt!                                        :alt:
http://stackoverflow.com/questions/34856230/how-to-understand-alt-in-clojure-core-async
#+BEGIN_SRC clojure
(require '[clojure.core.async :as a :refer [>! go chan alt!]])

(let [c1 (chan)
      c2 (chan)]
  (go
    (alt!
      [c1 c2] ([val ch] (println "Read" val "from" ch))))
  (go (>! c2 "that"))

  (go (>! c1 "this"))
  (go
    (alt!
      [c1 c2] ([val ch] (println "Read" val "from" ch)))))
#+END_SRC
result is
;; repl output
;; #<ManyToManyChannel clojure.core.async.impl.channels.ManyToManyChannel@2db05690>
;; Read that from #<ManyToManyChannel clojure.core.async.impl.channels.ManyToManyChannel@7523ce7e>
;; Read this from #<ManyToManyChannel clojure.core.async.impl.channels.ManyToManyChannel@6a81559c>
*** good blogs
http://ianrumford.github.io/
*** my questions
**** def
*question*:
 I defined a var like (def firefox_brower some_specificiation_for_firefox)
 and used core.aysnc, and then I found the code of (def firef...) run twice,
 since I saw two firefox stared up since core.async could kick off multiple threads, so will (def ...)
         run for each thread?
 If I run lein repl, then I only saw one firefox.
 but if run lein run, it will startup 2 firefox. But the main function
         doesn't call any code to startup firefox, only some code for
         core.async
*answer*
<justin_smith>  generally you shouldn't ever have side effects at the
               top level - for example that def would start up firefox while
               building an uberjar or running your tests (probably not things
               you want)  [01:49]
<justin_smith>  a common way to deal with this are to use an atom or
               delay or promise that will hold the firefox-browser value, then
               an init function (called in your -main) that actually starts up
               firefox and connects your handle to the container  [01:52]
**** get current thread information
(get-thread-bindings)
*** some function
**** constantly
https://medium.com/@davidrupp/clojure-alter-var-root-and-constantly-d8c5b48fda02#.6ne8b6stx
*** TODO good link to read
https://skillsmatter.com
http://www.clojurenewbieguide.com/
https://github.com/clojure-emacs/cider
*** promo
https://www.booleanknot.com/blog/2015/12/21/encapsulation-and-clojure-part-1.html
http://fn-code.blogspot.com/2015/10/my-concern-with-concerns.html
*** web scraping                                          :scrape;scraping: :webdriver:
http://stackoverflow.com/questions/22168883/whats-the-best-way-of-scraping-data-from-a-website/22180602#22180602
**** good examples/projects 
https://github.com/dfuenzalida/lazada-scrape
https://github.com/davidsantiago/hickory
**** set page loading time out for webdriver
http://stackoverflow.com/questions/34790720/setting-of-pageload-timeout-for-clojure-webdriver
    (.. (:webdriver driver) manage timeouts (pageLoadTimeout 25 TimeUnit/SECONDS))
**** force not use proxy in firefox
#+BEGIN_SRC clojure
(doto (ff/new-profile (str "/home/oracle/.mozilla/firefox/" directory))
                  (ff/set-preferences {:network.proxy.type 0})
                  )
#+END_SRC
**** proxy list 
http://proxylist.hidemyass.com/search-1309936#listable
https://www.us-proxy.org/
http://free-proxy-list..net/
https://incloak.com/proxy-list/?maxtime=2100&anon=234
http://www.ultraproxies.com/
https://www.bestvpn.com/blog/8363/use-i2p-idiots-starting-guide/
https://www.reddit.com/r/i2p/comments/3du46g/what_is_i2p/ct8spjv
https://hidester.com/proxylist/    *very good, could export all proxies as excel*
http://freeproxylists.net/

http://freeproxylists.net/?c=&pt=&pr=&a%5B%5D=1&a%5B%5D=2&u=90
** misc
*** 图片识别 验证码
http://www.chaojiying.com/
** shell
*** fish
*** mosh
** TDD
http://www.rbcs-us.com/documents/Why-Most-Unit-Testing-is-Waste.pdf
http://martinfowler.com/articles/is-tdd-dead/
http://pythontesting..net/agile/is-tdd-dead/
http://www.pitheringabout.com/?p=1069
** chat
https://gitter.im/home/explore
https://www.codefellows.org/blog/10-reasons-why-i-like-slack-and-think-you-should-try-it
** TODO to read
https://engineering.fundingcircle.com/blog/2016/01/11/tdd-in-clojure/
** TODO oneline course
http://www.slideshare.net/
http://bigdatauniversity.com/
* emacs
** paredit
http://overtone.github.io/emacs-live/doc-clojure-paredit.html
http://pub.gajendra.net/src/paredit-refcard.pdf
http://danmidwood.com/content/2014/11/21/animated-paredit.html
** backup
http://emacs.stackexchange.com/questions/20318/how-to-backup-bookmark-for-spacemacs

Spacemacs saves the bookmarks in ~/.emacs.d/.cache/bookmarks, and the recent files lise in ~/.emacs.d/.cache/recentf. You can copy these two files somewhere outside of ~/.emacs.d, and copy them back in after re-installing.

In fact, there might be more files in ~/.emacs.d/.cache that you'd like to save. I suggest backing up the entire ~/.emacs.d/.cache and restoring what you miss after re-installation.

For completeness, I'll mention that the locations of these two files are controlled by the variables bookmark-default-file and recentf-save-file.
** org mode
*** Export

**** html setting

***** control superscripts
Add the following at the beginning of your file.
#+OPTIONS: ^:nil
^:
Toggle TeX-like syntax for sub- and superscripts. If you write "^:{}", ‘a_{b}’ will be interpreted, but the simple ‘a_b’ will be left as it is (org-export-with-sub-superscripts). 
***** outline level
 #+OPTIONS: H:5
The above means html will export 5 level outline. And the default is 3 level outline.

The outline structure of the document as described in Document Structure, forms the basis for defining sections of the exported document. However, since the outline structure is also used for (for example) lists of tasks, only the first three outline levels will be used as headings. Deeper levels will become itemized lists. You can change the location of this switch globally by setting the variableorg-export-headline-levels, or on a per-file basis with a line

*** PlantUML (draw digram) 
workable setting on windows
#+BEGIN_SRC elisp

  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . nil)
     (plantuml . t)
     (python . t)))
  (setq org-plantuml-jar-path
        (expand-file-name "D:\\Daniel\\lib\\plantuml.jar"))

#+END_SRC

Setup
With the latest version of Org-mode setup consists of adding plantuml to `org-babel-load-languages' with code like the following or through the customization interface.
Then download the jar file save it somewhere on your system, set `org-plantuml-jar-path' to point to this file.
#+BEGIN_SRC elisp

;; active Org-babel languages
(org-babel-do-load-languages
 'org-babel-load-languages
 '(;; other Babel languages
   (plantuml . t)))
(setq org-plantuml-jar-path
      (expand-file-name "~/src/org/contrib/scripts/plantuml.jar"))

#+END_SRC
Usage
see http://plantuml.sourceforge.net/ for a variety of example usages, the following code block is an example of usage from within an Org-mode file.
#+begin_src plantuml :file tryout.png
  Alice -> Bob: synchronous call
  Alice ->> Bob: asynchronous call
#+end_src
#+results:file:tryout.png
*** to-do

*** edit source code
 C-c ' 
*** Table

**** How to move to end of cell
In org-mode, table cells are called *fields*. C-h a org field outputs a list of commands related to org tables fields.
The function org-forward-sentence is bound to M-e. When inside a table, it will jump to the end of the current field.
http://emacs.stackexchange.com/questions/18362/how-to-move-to-the-end-of-current-cell
** cider
*** kill a process inside emacs cider
If you run C-c C-c inside *REPL* window (not _editor_ window), emacs will eventually cancel the top level repl command that is looping. This will take a while if it is a tight loop, and even longer if it is producing large amounts of output. But it will eventually stop the code without having to kill emacs
** magit
*** git
**** src refspec master does not match any when pushing commits in git
http://stackoverflow.com/questions/4181861/src-refspec-master-does-not-match-any-when-pushing-commits-in-git
Try git show-ref to see what refs do you have. Is there refs/heads/master?

use 
git branch --list 
to check whether there are strange branch , if exists, then delete it
git branch -D branch_name
**** how to get the remote url
If referential integrity is intact:

git remote show origin

If referential integrity has been broken:

git config --get remote.origin.url
**** stash                                                         :stash:
| z   | Create new stash                    | Stashes are listed in the status buffer.                 |
| Z   | Create new stash and maintain state | Leaves current changes in working tree and staging area. |
| RET | View stash                          |                                                          |
| a   | Apply stash                         |                                                          |
| A   | Pop stash                           |                                                          |
| k   | Drop stash                          |                                                          |
**** git concept
http://marklodato.github.io/visual-git-guide/index-en.html
http://eagain.net/articles/git-for-computer-scientists/
***** different between reset and checkout
http://stackoverflow.com/questions/3639342/whats-the-difference-between-git-reset-and-git-checkout
HEAD is not the latest revision, it's the current revision. Usually, it's the latest revision of the current branch, but it doesn't have to be.
HEAD really just means "what is my repo currently pointing at". Thanks svick for the heads up on this one (no pun intended) 
In the event that the commit HEAD refers to is not the tip of any branch, this is called a "detached head".
HEAD is actually a special type of reference that points to another reference. It may point to master or it may not (it will point to whichever branch is currently checked out). If you know you want to be committing to the master branch then push to this.
A head is simply a reference to a commit object. Each head has a name (branch name or tag name, etc). By default, there is a head in every repository called master. A repository can contain any number of heads. At any given time, one head is selected as the “current head.” This head is aliased to HEAD, always in capitals".

Note this difference: a “head” (lowercase) refers to any one of the named heads in the repository; “HEAD” (uppercase) refers exclusively to the currently active head. This distinction is used frequently in Git documentation.

master is a name commonly given to the main branch, but it could be called anything else (or there could be no main branch).
master is a reference to the end of a branch. By convention (and by default) this is usually the main integration branch, but it doesn't have to be.

origin is a name commonly given to the main remote. remote is another repository that you can pull from and push to. Usually it's on some server, like github.
**** git command
***** revert to a specific file from a specific commit
this command will show all the commit history on a file
git log relative/path/to/a/file

then check out the file from that commit
git checkout 188ce04ddc3b5bd2e25ae1faa1e826d3bca05c92  relative/path/to/a/file

***** get the commit history for a sepecific developer
git log --author=daniel
**** about push
#+BEGIN_SRC shell
git config --global push.default simple
#+END_SRC

the default push action is based on the variable of push.default in configuration file
push.default
Defines the action git push should take if no refspec is explicitly given. Different values are well-suited for specific workflows; for instance, in a purely central workflow (i.e. the fetch source is equal to the push destination), upstream is probably what you want. Possible values are:

nothing - do not push anything (error out) unless a refspec is explicitly given. This is primarily meant for people who want to avoid mistakes by always being explicit.

current - push the current branch to update a branch with the same name on the receiving end. Works in both central and non-central workflows.

upstream - push the current branch back to the branch whose changes are usually integrated into the current branch (which is called @{upstream}). This mode only makes sense if you are pushing to the same repository you would normally pull from (i.e. central workflow).

simple - in centralized workflow, work like upstream with an added safety to refuse to push if the upstream branch’s name is different from the local one.

When pushing to a remote that is different from the remote you normally pull from, work as current. This is the safest option and is suited for beginners.

This mode has become the default in Git 2.0.

matching - push all branches having the same name on both ends. This makes the repository you are pushing to remember the set of branches that will be pushed out (e.g. if you always push maint and master there and no other branches, the repository you push to will have these two branches, and your local maint and master will be pushed there).

To use this mode effectively, you have to make sure all the branches you would push out are ready to be pushed out before running git push, as the whole point of this mode is to allow you to push all of the branches in one go. If you usually finish work on only one branch and push out the result, while other branches are unfinished, this mode is not for you. Also this mode is not suitable for pushing into a shared central repository, as other people may add new branches there, or update the tip of existing branches outside your control.

This used to be the default, but not since Git 2.0 (simple is the new default).
**** branch
***** delete a branch
git push origin --delete branch-name-7428
***** push a branch
when push a branch, shouldn't put the "origin" if not use src:dest format, since it will automatically add origin
git push feature/branch-name
***** push.default
***** push to muliptle branches
git push origin branchA branchB.
**** remote
git show-ref master
***** show remote information
git remote show origin
*** key biddings
good link http://magit.vc/manual/magit-refcard.pdf
Having decided that Magit is the bee’s knees you’ll probably want to know the keyboard shortcuts.  Here are the most common ones:
C-c g Start magit (M-x magit-status)
s   Stage file
S   Stage all files
u   Unstage file
c   Commit staged files. C-c C-c after writing commit message or C-c C-k to abort. C-c C-a sdlkfjlkdfj
b b   To switch to a branch
b m   Rename branch
b d   Delete branch
b v   List branches (can checkout from resultant screen using RET)
P P   Git push
f f   Git fetch
F F   Git pull
TAB   Shows diff of file in the list or expand collapse section. Stage and unstage actually work on bits of the diff as well.
i   Ignore file (adds to .gitignore)
k   Delete. Deletes untracked file and stashes (on section header it deletes all untracked files). If you’re positioned in a diff for an uncommited file you can also delete just the hunk.  (discard a file)
l l   Show history
l L   Show history in verbose format
t t   Make lightweight tag
t a   Make annotated tag
x   Revert commit history to entered revision
z z   Create a stash
a a
A   Apply the stash and pop it off the stash list
z s   Creates a snapshot (the stash gets created but the working tree is not deleted.
w   Show how other branches related to the current one
m m   Start merging. In the event of conflicts resolve changes using e then stage with s.
R   Starts a rebase R c will continue a rebase. Stage resolved conflicts before continuing.
*** evil-magit
https://github.com/justbur/evil-magit
or press "?" in the magit buffer, it will show all help, such as "x" means discard a change
*** good magit command


**** check out file from different branch
run the following function, it will prompt for the branch and file to be checked out
magit-checkout-file

**** show change in a commit in the log history
in the log history, use "d"+"d" to see the history for a commit under the cursor.

**** show log history for a specific dev in magit
in the magit buffer, press "L", then it will show lots of options, and then press "=a" to input the dev name, press enter again to show all the logs for that author
*** kill/delete/remove a commit
to remove the most recent commit
git reset --hard HEAD~1
http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git

*** get the commit history commits for the current file
in spacemacs, SPC + g + L will show the commit for the current file in the buffer, and then in the commit historical window, press Enter to get the information for each commit, then in the detailed window for that commit, press TAB to get the change details for the modified files
*** run git command inside magit
in the magit window, press "!"
*** copy commit hash value
C-w	Copy sha1 of current commit into kill ring
*** good package
peep-dired
https://github.com/asok/peep-dired
*** view the commit history for the file in the current buffer
the following command could see all the detailed commit information including author.
C-X v l
or just use git timemachine to view different commit
** erc/irc
*** how to post multiple line
past the code in below link, and then past the url in irc
http://paste.lisp.org/new
** vi (evil)
*** key bidding
Vim Commands Cheat Sheet

How to Exit

:q[uit]	Quit Vim. This fails when changes have been made.
:q[uit]!	Quit without writing.
:cq[uit]	Quit always, without writing.
:wq	Write the current file and exit.
:wq!	Write the current file and exit always.
:wq {file}	Write to {file}. Exit if not editing the last
:wq! {file}	Write to {file} and exit always.
:[range]wq[!]	[file] Same as above, but only write the lines in [range].
ZZ	Write current file, if modified, and exit.
ZQ	Quit current file and exit (same as ":q!").
Editing a File

:e[dit]	Edit the current file. This is useful to re-edit the current file, when it has been changed outside of Vim.
:e[dit]!	Edit the current file always. Discard any changes to the current buffer. This is useful if you want to start all over again.
:e[dit] {file}	Edit {file}.
:e[dit]! {file}	Edit {file} always. Discard any changes to the current buffer.
gf	Edit the file whose name is under or after the cursor. Mnemonic: "goto file".
Inserting Text

a	Append text after the cursor [count] times.
A	Append text at the end of the line [count] times.
i	Insert text before the cursor [count] times.
I	Insert text before the first non-blank in the line [count] times.
gI	Insert text in column 1 [count] times.
o	Begin a new line below the cursor and insert text, repeat [count] times.
O	Begin a new line above the cursor and insert text, repeat [count] times.
Inserting a file

:r[ead] [name]	Insert the file [name] below the cursor.
:r[ead] !{cmd}	Execute {cmd} and insert its standard output below the cursor.
Deleting Text

<Del> or
x	Delete [count] characters under and after the cursor
X	Delete [count] characters before the cursor
d{motion}	Delete text that {motion} moves over
dd	Delete [count] lines
D	Delete the characters under the cursor until the end of the line
{Visual}x or
{Visual}d	Delete the highlighted text (for {Visual} see Selecting Text).
{Visual}CTRL-H or
{Visual}	When in Select mode: Delete the highlighted text
{Visual}X or
{Visual}D	Delete the highlighted lines
:[range]d[elete]	Delete [range] lines (default: current line)
:[range]d[elete] {count}	Delete {count} lines, starting with [range]
Changing (or Replacing) Text

r{char}	replace the character under the cursor with {char}.
R	Enter Insert mode, replacing characters rather than inserting
~	Switch case of the character under the cursor and move the cursor to the right. If a [count] is given, do that many characters.
~{motion}	switch case of {motion} text.
{Visual}~	Switch case of highlighted text
Substituting

:[range]s[ubstitute]/{pattern}/{string}/[c][e][g][p][r][i][I] [count]	For each line in [range] replace a match of {pattern} with {string}.
:[range]s[ubstitute] [c][e][g][r][i][I] [count] :[range]&[c][e][g][r][i][I] [count]	Repeat last :substitute with same search pattern and substitute string, but without the same flags. You may add extra flags
The arguments that you can use for the substitute commands:
[c]  Confirm each substitution.  Vim positions the cursor on the matching
  string.  You can type:
      'y'      to substitute this match
      'n'      to skip this match
         to skip this match
      'a'      to substitute this and all remaining matches {not in Vi}
      'q'      to quit substituting {not in Vi}
      CTRL-E  to scroll the screen up {not in Vi}
      CTRL-Y  to scroll the screen down {not in Vi}.
[e]     When the search pattern fails, do not issue an error message and, in
  particular, continue in maps as if no error occurred.  
[g]  Replace all occurrences in the line.  Without this argument,
  replacement occurs only for the first occurrence in each line.
[i]  Ignore case for the pattern.  
[I]  Don't ignore case for the pattern.  
[p]  Print the line containing the last substitute.
Copying and Moving Text

"{a-zA-Z0-9.%#:-"}	Use register {a-zA-Z0-9.%#:-"} for next delete, yank or put (use uppercase character to append with delete and yank) ({.%#:} only work with put).
:reg[isters]	Display the contents of all numbered and named registers.
:reg[isters] {arg}	Display the contents of the numbered and named registers that are mentioned in {arg}.
:di[splay] [arg]	Same as :registers.
["x]y{motion}	Yank {motion} text [into register x].
["x]yy	Yank [count] lines [into register x]
["x]Y	yank [count] lines [into register x] (synonym for yy).
{Visual}["x]y	Yank the highlighted text [into register x] (for {Visual} see Selecting Text).
{Visual}["x]Y	Yank the highlighted lines [into register x]
:[range]y[ank] [x]	Yank [range] lines [into register x].
:[range]y[ank] [x] {count}	Yank {count} lines, starting with last line number in [range] (default: current line), [into register x].
["x]p	Put the text [from register x] after the cursor [count] times.
["x]P	Put the text [from register x] before the cursor [count] times.
["x]gp	Just like "p", but leave the cursor just after the new text.
["x]gP	Just like "P", but leave the cursor just after the new text.
:[line]pu[t] [x]	Put the text [from register x] after [line] (default current line).
:[line]pu[t]! [x]	Put the text [from register x] before [line] (default current line).
Undo/Redo/Repeat

u	Undo [count] changes.
:u[ndo]	Undo one change.
CTRL-R	Redo [count] changes which were undone.
:red[o]	Redo one change which was undone.
U	Undo all latest changes on one line. {Vi: while not moved off of it}
.	Repeat last change, with count replaced with [count].
Moving Around

Basic motion commands:

        k              
      h   l      
        j             
h or
[count] characters to the left (exclusive).
l or
or
[count] characters to the right (exclusive).
k or
or
CTRL-P	[count] lines upward
j or
or
CTRL-J or
or
CTRL-N	[count] lines downward (linewise).
0	To the first character of the line (exclusive).
<Home>	To the first character of the line (exclusive).
^	To the first non-blank character of the line
$ or
<End>	To the end of the line and [count - 1] lines downward
g0 or
g<Home>	When lines wrap ('wrap on): To the first character of the screen line (exclusive). Differs from "0" when a line is wider than the screen. When lines don't wrap ('wrap' off): To the leftmost character of the current line that is on the screen. Differs from "0" when the first character of the line is not on the screen.
g^	When lines wrap ('wrap' on): To the first non-blank character of the screen line (exclusive). Differs from "^" when a line is wider than the screen. When lines don't wrap ('wrap' off): To the leftmost non-blank character of the current line that is on the screen. Differs from "^" when the first non-blank character of the line is not on the screen.
g$ or
g<End&gr;	When lines wrap ('wrap' on): To the last character of the screen line and [count - 1] screen lines downward (inclusive). Differs from "$" when a line is wider than the screen. When lines don't wrap ('wrap' off): To the rightmost character of the current line that is visible on the screen. Differs from "$" when the last character of the line is not on the screen or when a count is used.
f{char}	To [count]'th occurrence of {char} to the right. The cursor is placed on {char} (inclusive).
F{char}	To the [count]'th occurrence of {char} to the left. The cursor is placed on {char} (inclusive).
t{char}	Till before [count]'th occurrence of {char} to the right. The cursor is placed on the character left of {char} (inclusive).
T{char}	Till after [count]'th occurrence of {char} to the left. The cursor is placed on the character right of {char} (inclusive).
;	Repeat latest f, t, F or T [count] times.
,	Repeat latest f, t, F or T in opposite direction [count] times.
- <minus>	[count] lines upward, on the first non-blank character (linewise).
+ or
CTRL-M or
<CR>	[count] lines downward, on the first non-blank character (linewise).
_ <underscore>	[count] - 1 lines downward, on the first non-blank character (linewise).
<C-End> or
G	Goto line [count], default last line, on the first non-blank character.
<C-Home> or
gg	Goto line [count], default first line, on the first non-blank character.
<S-Right> or
w	[count] words forward
<C-Right> or
W	[count] WORDS forward
e	Forward to the end of word [count]
E	Forward to the end of WORD [count]
<S-Left> or
b	[count] words backward
<C-Left> or
B	[count] WORDS backward
ge	Backward to the end of word [count]
gE	Backward to the end of WORD [count]
These commands move over words or WORDS.
A word consists of a sequence of letters, digits and underscores, or a sequence of other non-blank characters, separated with white space (spaces, tabs, ). This can be changed with the 'iskeyword' option.
A WORD consists of a sequence of non-blank characters, separated with white space. An empty line is also considered to be a word and a WORD.
(	[count] sentences backward
)	[count] sentences forward
{	[count] paragraphs backward
}	[count] paragraphs forward
]]	[count] sections forward or to the next '{' in the first column. When used after an operator, then the '}' in the first column.
][	[count] sections forward or to the next '}' in the first column
[[	[count] sections backward or to the previous '{' in the first column
[]	[count] sections backward or to the previous '}' in the first column
Marks

m{a-zA-Z}	Set mark {a-zA-Z} at cursor position (does not move the cursor, this is not a motion command).
m' or
m`	Set the previous context mark. This can be jumped to with the "''" or "``" command (does not move the cursor, this is not a motion command).
:[range]ma[rk] {a-zA-Z}	Set mark {a-zA-Z} at last line number in [range], column 0. Default is cursor line.
:[range]k{a-zA-Z}	Same as :mark, but the space before the mark name can be omitted.
'{a-z}	To the first non-blank character on the line with mark {a-z} (linewise).
'{A-Z0-9}	To the first non-blank character on the line with mark {A-Z0-9} in the correct file
`{a-z}	To the mark {a-z}
`{A-Z0-9}	To the mark {A-Z0-9} in the correct file
:marks	List all the current marks (not a motion command).
:marks {arg}	List the marks that are mentioned in {arg} (not a motion command). For example:
Searching

/{pattern}[/]	Search forward for the [count]'th occurrence of {pattern}
/{pattern}/{offset}	Search forward for the [count]'th occurrence of {pattern} and go {offset} lines up or down.
/<CR>	Search forward for the [count]'th latest used pattern
//{offset}<CR>	Search forward for the [count]'th latest used pattern with new. If {offset} is empty no offset is used.
?{pattern}[?]<CR>	Search backward for the [count]'th previous occurrence of {pattern}
?{pattern}?{offset}<CR>	Search backward for the [count]'th previous occurrence of {pattern} and go {offset} lines up or down
?<CR>	Search backward for the [count]'th latest used pattern
??{offset}<CR>	Search backward for the [count]'th latest used pattern with new {offset}. If {offset} is empty no offset is used.
n	Repeat the latest "/" or "?" [count] times.
N	Repeat the latest "/" or "?" [count] times in opposite direction.
Selecting Text (Visual Mode)

To select text, enter visual mode with one of the commands below, and use motion commands to highlight the text you are interested in. Then, use some command on the text.
The operators that can be used are:
  ~  switch case
  d  delete
  c  change
  y  yank
  >  shift right 
  <  shift left 
  !  filter through external command 
  =  filter through 'equalprg' option command 
  gq  format lines to 'textwidth' length 
v	start Visual mode per character.
V	start Visual mode linewise.
<Esc>	exit Visual mode without making any changes
How to Suspend

CTRL-Z	Suspend Vim, like ":stop". Works in Normal and in Visual mode. In Insert and Command-line mode, the CTRL-Z is inserted as a normal character.
:sus[pend][!] or
:st[op][!]	Suspend Vim. If the '!' is not given and 'autowrite' is set, every buffer with changes and a file name is written out. If the '!' is given or 'autowrite' is not set, changed buffers are not written, don't forget to bring Vim back to the foreground later!
** profile
*** key biddings                                          :key:map:bidding:
in spacemacs, it will also pop some menu for pick up when there are mulitple choice for the same starting key.
;; Example of single key sequence
(defun comment-sexp ()
  "Comment out the sexp at point."
  (interactive)
  (save-excursion
    (mark-sexp)
    (paredit-comment-dwim)))

(global-set-key [f5] 'comment-sexp)
(global-set-key (kbd "<f7>") nil) ; good idea to put nil to the starting key
(global-set-key (kbd "<f7> <f7>") 'hs-toggle-hiding)
(global-set-key (kbd "<f8>") 'spacemacs/new-empty-buffer)
*** inside function of dotspacemacs/user-config
**** enable line number
#+BEGIN_SRC elisp
(global-linum-mode)
#+END_SRC
** good tips
*** emacs-smeargle
SPC + g + h + h
M-x smeargle

Highlight regions by last updated time.

M-x smeargle-commits

Highlight regions by age of changes.

** elisp
*** show message in mini buff
(message "the message")
** email

*** yahoo
Incoming Mail (IMAP) Server
Server - imap.mail.yahoo.com
Port - 993
Requires SSL - Yes
Outgoing Mail (SMTP) Server

Server - smtp.mail.yahoo.com
Port - 465 or 587
Requires SSL - Yes
Requires authentication - Yes<2015-12-21 Mon>
** search/grep
*** how to search recusively
http://emacs.stackexchange.com/questions/7964/helm-projectile-ag-how-can-i-refine-the-grep-results-further
** dired
sort files in dired mode: ‘s’ to toggle between alphabetical and date order and with prefix argument, edit listing switches

* misc
** google in China without block                            :google:goagent:
like goagent but better than it
https://github.com/XX-net/XX-Net
https://github.com/XX-net/XX-Net/wiki/%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95
** proxy
*** turn socks proxy into http proxy                          :proxy:socks:
http://www.privoxy.org/
 Go to http://privoxy.org/ and install the latest version, and at the end of the configuration file (found at /etc/privoxy/config on most Linux systems), add the following:

forward-socks5 / proxy_host:proxy_port .
Replacing proxy_host with your SOCKS proxy's hostname or IP, and proxy_port with your SOCKS proxy's port. Don't forget the period at the end! Then, follow the directions above for HTTP proxies.
** movies
http://www.dailymotion.com/us
http://www.piaohua.com/
bt 天堂
http://www.bttiantang.com/
** download youtube
http://en.savefrom.net/?rmode=false
** p2p
*** good university
#+BEGIN_SRC sql
insert into good_universities values ('中央音乐学院',120,800);
insert into good_universities values ('上海音乐学院',120,800);
insert into good_universities values ('中国音乐学院',120,800);
insert into good_universities values ('武汉音乐学院',120,800);
insert into good_universities values ('四川音乐学院',120,800);
insert into good_universities values ('星海音乐学院',120,800);
insert into good_universities values ('天津音乐学院',120,800);
insert into good_universities values ('沈阳音乐学院',120,800);
insert into good_universities values ('南京艺术学院',120,800);
insert into good_universities values ('广西艺术学院',120,800);
insert into good_universities values ('山东艺术学院',120,800);
#+END_SRC
*** user
insert into pp_user (user_name,pwd,id) values( 'tangshang1234@163.com','pwd1234',1);
insert into pp_user (user_name,pwd,id) values( 'staywithpin@gmail.com','gmailabc123',2);
insert into pp_user (user_name,pwd,id) values( 'zhangjiang1236a@sina.com','zhngjiang1',3);
insert into pp_user (user_name,pwd,id) values( 'ebayguyabc@sina.com','ebay123',4);

UPDATE pp_user
   SET proxy_ip = a.ip,
       proxy_port = a.port::int,
       proxy_type = a.proxy_type
FROM (SELECT ip,
             port,
             proxy_type,
             success,
             ROW_NUMBER() OVER (ORDER BY success DESC) idx
      FROM proxies
      WHERE country = 'China'
      AND   proxy_type = 'HTTP') a
WHERE a.idx = pp_user.id
** blog
free blog
http://www.websitebuildertop10.com/start-a-free-blog
** 家电评测
https://www.aham.org/
** wifi at 乌龙泉, Wuhan (林业局) s87962341

** family network (上网)
heqihua1/123123
https://github.com/nkovacne/freedns-samples

** paipai

*** some url
http://group.ppdai.com/forum.php?mod=viewthread&tid=793844&extra=page%3D1
*** by paipai_level
#+BEGIN_SRC sql

select  total.ppdai_level, total.rate, total.cnt, 100.000 * bad.cnt/total.cnt  bad_rate from
(select ppdai_level,rate,count(*) cnt  from bidding_history where created_time <'2015-11-26 00:00:00'
group by ppdai_level,rate) total left join 
(select  ppdai_level,rate,count(*) cnt  from blackuser a inner join bidding_history b on a.user_name= b.user_name
group by ppdai_level,rate) bad on bad.ppdai_level=total.ppdai_level and bad.rate=total.rate
order by bad_rate


SELECT total.ppdai_level,
       total.rate,
       total.cnt,
       bad.cnt,
       total.cnt / bad.cnt
FROM (SELECT ppdai_level,
             rate,
             COUNT(*) cnt
      FROM bidding_history
      WHERE created_time < '20160101'::TIMESTAMP
      GROUP BY ppdai_level,
               rate) total
  LEFT JOIN (SELECT ppdai_level,
                    rate,
                    COUNT(*) cnt
             FROM bidding_history
             WHERE created_time < '20160101'::TIMESTAMP
             AND   bidding_id IN (SELECT bidding_id FROM bad_user_biddings)
             GROUP BY ppdai_level,
                      rate) bad
         ON total.ppdai_level = bad.ppdai_level
        AND total.rate = bad.rate
ORDER BY 5 DESC


select count(*) from universities a right join  bidding_history b on a.name = b.school  where created_time <='2016-01-01'
and rate::int=22  
and b.school is not null
--and star>=4 
and school like '%军%'
and bidding_id in (select bidding_id from bad_user_biddings)

-- good education

select *from universities a right join  bidding_history b on a.name = b.school  where created_time <='2016-01-01'
and rate::int=22  
and b.school is not null
--and house_info ='有房' and car_info = '是'
and star>=4 and education_method <>'网络教育'
--and wsl_rank<=100
and bidding_id in (select bidding_id from bad_user_biddings)


-- level C 


select *from universities a right join  bidding_history b on a.name = b.school  where created_time <='2016-01-01'
and rate::int=22  and ppdai_level = 'C'
and b.school is not null
--and house_info ='有房' and car_info = '是'
--and star>=4 and education_method <>'网络教育'
--and wsl_rank<=100
and bidding_id in (select bidding_id from bad_user_biddings)


#+END_SRC
*** by education
#+BEGIN_SRC sql

select  total.education_level, total.rate, total.cnt, 100.000 * bad.cnt/total.cnt  bad_rate from
(select education_level,rate,count(*) cnt  from bidding_history where created_time <'2015-11-26 00:00:00'
group by education_level,rate) total left join 
(select  education_level,rate,count(*) cnt  from blackuser a inner join bidding_history b on a.user_name= b.user_name
group by education_level,rate) bad on coalesce(bad.education_level,'')=coalesce(total.education_level,'') and bad.rate=total.rate
order by bad_rate

select  total.education_level, total.education_method, total.cnt, bad.cnt,100.000 * bad.cnt/total.cnt  bad_rate from
(select education_level,education_method,count(*) cnt  from bidding_history where created_time <'2015-11-26 00:00:00'
group by education_level,education_method) total left join 
(select  education_level,education_method,count(*) cnt  from blackuser a inner join bidding_history b on a.user_name= b.user_name
group by education_level,education_method) bad on coalesce(bad.education_level,'')=coalesce(total.education_level,'') and coalesce(bad.education_method,'')=coalesce(total.education_method,'')
order by bad_rate


#+END_SRC
*** some query
#+BEGIN_SRC sql

select to_char(created_time,'YYYYMMDD')::int/100,count(*) from blackuser a inner join bidding_history b on a.user_name=b.user_name
group by to_char(created_time,'YYYYMMDD')::int/100

select to_char(created_time,'YYYYMMDD')::int/100, count(*) from bidding_history where  created_time <'2015-11-26 00:00:00'
group by to_char(created_time,'YYYYMMDD')::int/100

select a.*,b.* from my_blacklist  a inner join bidding_history b on a.bidding_id=b.bidding_id where title not like '%闪电借款%'

#+END_SRC
*** config
#+BEGIN_SRC clojure
{
:accounts
[{:username "your_account_name" :password "your_password"}]
:sql " CASE
               WHEN AGE <= 39 AND rate > 18 AND waiting_to_pay < 5000 AND title not like '%闪电%' AND amount + waiting_to_pay < 15000 AND education_method IN ('普通','普通全日制','研究生') AND education_level IN ('本科','硕士研究生','博士研究生','硕士','第二学士学位','博士') THEN CASE
               WHEN wsl_rank < 10 THEN 1500
               WHEN wsl_rank < 20 THEN 1200
               WHEN wsl_rank < 40 THEN 800
               WHEN wsl_rank < 80 THEN 600
               WHEN wsl_rank < 120 THEN 500
               WHEN wsl_rank < 150 THEN 400
               WHEN star >= 6 then 1000
               WHEN star >= 5 then 700
               WHEN star >= 4 then 500
               WHEN wsl_rank < 200 THEN 0
               ELSE 0
             END+ CASE
               WHEN certificates_in_str LIKE '%央行征信报告%' OR certificates LIKE '%人行征信认证%' THEN 154
               ELSE 0
             END+ CASE
               WHEN certificates_in_str LIKE '%个人常用银行流水%' THEN 152
               ELSE 0
             END+ CASE
               WHEN certificates_in_str LIKE '%公积金资料%' THEN 151
               ELSE0
             END ELSE 0 END
             + CASE WHEN ppdai_level = 'C' and convert(rate,int) = 22 and title not like '%闪电%' then 111 else 0 end"
            :bidding? true :start-webdriver? true :local? false}

#+END_SRC
* mobile
** android
*** to list real devices under ubuntu
http://misha.beshkin.lv/ddms-insufficient-permissions-for-device/
https://github.com/M0Rf30/android-udev-rules
*** start a simulator
+ from android studio --> tools  --> android -->  SDK Manager to install SDK, and from ADV manager to install some intel x64 image
*** start the debug
1: connect andriod device to PC with debug enable
2: in the project root folder run
   oracle@SomeHost /data/node-v4.4.3/bin/future-app $ npm start
3: deplay the app
react-native run-android

* work
** TODO cr to read
FUS-12048 --- *important*
* youyou
** good books
i 图说民间儿童游戏
时代广场的蟋蟀
帅狗杜明尼克
不老泉文库(套装共 10 册) 
蓝鲸的眼睛
炫动科技-疯狂实验室
影响世界的名人童年故事
影响中国的名人童年故事
十年后的礼物
百年百部中国儿童文学经典 共四册
*** christian book
http://www.heatherhaupt.com/2014/11/26/christian-book-series-for-boys/
http://www.amazon.com/s/?_encoding=UTF8&camp=1789&creative=390957&field-keywords=imagination%20station&linkCode=ur2&sprefix=imagination%20%2Caps&tag=cultiva-20&url=search-alias%3Daps&linkId=JASB5DDR6I37EJ3Z
http://www.amazon.com/gp/product/0802469949/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0802469949&linkCode=as2&tag=cultiva-20&linkId=5O7PGTDLGYIUBXQR
http://www.amazon.com/gp/product/184550318X/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=184550318X&linkCode=as2&tag=cultiva-20&linkId=FSSHOF7A2BDCMVXK
http://www.christianbook.com/the-chronicles-narnia-volume-slipcased-hardcover/c-s-lewis/9780060244880/pd/77406?event=AFF&amp;p=1169378
http://www.amazon.com/gp/product/1581346913/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1581346913&linkCode=as2&tag=cultiva-20&linkId=U3L4DHUIST4TBG4I
** my good books
老鼠记者
冰心奖获奖作家精品书系
http://item.jd.com/11507009.html
** 电影
http://tv.sohu.com/20150304/n409319726.shtml?ptag=vsogou
* bible
** translation
http://baike.baidu.com/view/1485644.htm
http://baike.baidu.com/view/2775860.htm
http://baike.baidu.com/item/%E9%B2%8D%E5%BA%B7%E5%AE%81
** university
Harvard
http://baike.baidu.com/link?url=wzeERbHGRb7MzQUmLQwpnB7nFHihA1c9c6pbfZ_TIWiDqzWVAxjOLbcuInWMNocCWrcIWKcjkWNz72l0opEQ-q
Yale
http://baike.baidu.com/link?url=AvcoZKLnN8mIR6zfDrQOKO-IPifyZq-K3cr6cqC_80_FchVaa9NIBIXs9NpLxY-QIR_ZD8z1ii-huqr2mUihPa
** 威斯敏斯特教堂
http://baike.baidu.com/link?url=OIJKHAzVv3fj2tNcAp2vc6ezQd7P3yjGr4jl2Jl9LNMyXviMaMWuegDg6ysRh50yjV8yVatcqgdPMdqmShezJa
在物理与化学领域均做出杰出
威斯敏斯特教堂
威斯敏斯特教堂 (7 张)
 贡献的法拉第在去世后本来也有机会在威斯敏斯特教堂下葬，但因他信仰的教派不属当时统领英格兰的国教圣公会，威斯敏斯特教堂正是圣公会的御用教堂，因此拒不接受他在教堂内受飨。
雪莱和拜伦这两位举世闻名的大诗人也因为惊世骇俗的言行被教堂拒之门外
** 临终的话 
耶稣临终遗言 耶稣在十字架上说的最后一句话是：“成了。”
** 圣徒名言
 基督徒名人的名言

 爱主

1. 愿神使我们成为无有，好使主耶稣成为我们的一切。──约翰达秘

 

2. 你所需要的，不是去修补你的破旧房子，你只要把你的「地」让给基督，

祂就能挖掉你的旧生命，另盖更有价值的房子，祂也要永远住在其中。──宣信

 

3. 遵主的旨意而行是我最看重的事，只要能讨神的喜悦，付上任何代价都值得。──戴德生

 

4. 我们要让在诸天掌权的神也在我们身上掌权。──倪柝声

 

恩典

1. 恩典是神的乐意倾向将福气赐给不配得福的人。──陶恕

 

2. 我们越受神恩，便越发觉自己之不配受恩，因为恩，和光一样，能照见我们的不纯洁。──司布真

 

属灵争战

1. 我们作信徒的应该晓得，我们是在从事一场战争，为此，我们每个人都当装备自己，不要一心一意地专注物质和血气的事，因为攻击我们的都是邪灵撒但。

                                 ――约翰·让·加尔文

 

2、胜撒旦的法子，就是将神的话存在心里。──倪柝声

 

3、属灵争战得胜的根基永远是依靠宝血，从来没有人可以达到不需要宝血的地步。──倪柝声  

 

喜乐

1. 除了来自上帝之外，喜乐是不会存在的。──约翰.卫斯理

 

2. 幸福的 生活有三个不可缺的因素：一是希望，二是有事做，三是能爱人。──巴克莱

 

3. 与世人无异的人，圣灵不会充满他；没被圣灵充满的人，不能成圣；没成圣的人，生活不能喜乐。──陶恕

 

4. 自知被爱，就有喜乐。──巴刻

 

5. 在你力量作得到的范围内，随时随地借着你的面容、你的舌头、你的双手，散播快乐的种子，攸别人多得快乐。──王明道

 

6. 在基督信仰之外，没有快乐可言。──劳威廉

 

7. 一个充满热爱的心，才能变成一颗喜乐的心。永不要让任何事物使你忧伤，而令你忘记基督复活所带来的喜乐。──德兰

 

8. 我所以没有喜乐，是因为到外面去寻找里面的东西。我曾千辛万苦到处寻找喜乐，岂知喜乐就在我的心里。

   我正似一个富甲天下的穷人；又正像坐在盛大的筵席上闹着饥荒的人一样愚蠢。──盖恩夫人

 

9. 一个以神为父，以耶稣基督为救主，以圣灵为保惠师，以天为家的人，是快乐的。──麦吉尔

 

10.「靠主常常喜乐」是主的命令。──罗炳森师母

 

神的管教

1. 对神的管教，如果加以畏缩或反抗，必将成为你真正的伤害与毁灭。──巴寇

 

2. 管教常为祝福铺路的，只要我们适当的接受它，它就会为我们带来祝福。──孙德生

 

3. 神或会惩罚责备，却永不把人丢弃；凭诚信祂管教指斥，但祂的爱永不止息。──司布真    

            

破碎自己

1. 什么地方有了「己」，什么地方就必定有「罪」。──栾非力

2. 你越倒空自己，你就越有空处让神之灵来充满。──莫林诺

3. 每天的对主说「是」，对己说「不」要变成一种以主为生命之主的人的生活习惯。──柯理培

 

神的信实

1. 信靠祂的人，神永远给他开路，也不将超出他能承担的试探加给他。这就是神信实的一个明证。──戴德生

 

2. 有时你生命的道途十分崎岖艰难，天色又昏暗，路很难辨。

不要以为神的手会放弃你而不领你。路越黑，父神的手扶得越紧。 ──魏伯波

 

3. 就是在有云的时候，太阳仍旧在那里。所以，当我们在各样难处中的时候，神的光仍然不止息的照着我们。──慕安得烈

 

4. 我们理当相信神是信实的，祂能保守所有属乎祂的人。 ──约翰达秘                

 

属灵追求

1. 所有属灵的长进，都是在乎我们的饥渴。──倪柝声

 

2. 我们追求属灵生命的进深时，愿我们不是为增加自己属灵上的满足感，而是愿意更为神所喜悦，对人更有益处。──戴德生

 

3. 实在的长进是叫基督显大。──倪柝声

 

神的引导

1. 我们必需在信心的黑夜行走。这就是四围都是黑夜，完全不知道前面所要遭遇的事，

只借着信，信神，信神的话和神所安排的环境，作我们的引导。──十架约翰

 

2. 我们要向前走。神引导我们。虽然看不见，我们无庸惧怕，只管走。

这路途看不清楚，我也不必忧虑。我知道祂看见这路，我们也必终久看见祂。──金思理

 

3. 神的道就是往昔祂自己曾经走过的路途，而今日这正是我们要跟随祂一起走的道路。

神不会让我们踏上那些祂自己在我们之先未曾走过的路。──潘霍华

 

4. 专心跟从主的人，必不断地长进，在人格和外观上都会日益像祂。──孙德生

 

5. 主是引导你的……等候祂总是有益；切不可急忙，也不可自行其是。祂顾念我们，在一切事上都有引领。──约翰达秘                

 

骄傲

1. 骄傲高举自己，谦卑高举神。──杰瑞 怀特

 

2. 一切属灵的骄傲都能阻挡我们往上进，使我们不能在主里满有所得。──宋尚节

 

3. 使我们跌倒的一切邪恶中，骄傲是最大的一个；也是我们所有仇敌中最难最慢死去的一个。神憎恶骄傲胜过其它的恶，因为骄傲将属于神的地位给了人。

骄傲干扰与神的交通，引来祂的训斥，因为「神阻挡骄傲的人」。──约翰达秘

 

4. 自以为重要就是骄傲。一个人假若把自己当中心，认为宇宙中的一切都绕着他转；

带着这种心态来生活，是非常危险的。──巴克莱

 

5. 骄傲是奉自己为神明，看自己过于所当看的，将属于神的荣耀过来归自己。──孙德生

 

6. 真正的知识能引致谦卑，而不是傲慢。──孙德生

 

知足满足

1. 每一个人心中都有一个空虚，一种需要，除了基督十字架的爱，没有任何东西能满足它。──宾路易师母

 

2. 是的，无论是生是死，患难或忧伤，有主就知足；基督是终，因祂是始；基督是始，因祂是终。──迈尔

 

3. 除了上帝，没有任何东西，可以满足不朽灵魂的渴望；因为心灵是为祂而造，祗有祂能满足它。──翠恩齐

 

4. 有神的同在，一切都够了满足了。──法兰西斯

 

5. 以神为万有的人，纔有知足的心。──倪柝声

 

6. 若是没有祂的爱充满我的心，我就会去寻找虚幻无定之物以求满足。──约翰达秘                 

 

 

灵修

1.一个基督徒灵命的强弱，完全视乎他下了多少工夫去追求认识神。──陶恕

 

2.当你最不想灵修的时候，正是你最需要进入自己的密室，关上门的时候。──迈尔

 

3.最美的事，莫过于接近神，把祂的光芒撒播于人间。──贝多芬

 

朋友

1.不要将你的心事随便告诉人，却要与智能的、敬畏神的人商量事情。──金碧士

 

2.我们在交友方面乃决定人生的方向。──迈尔

 

3.真实的朋友乃是那些加强我与耶稣友谊的人。──吴汉斯

 

4.一个人如果能获得高贵的友情，便表明他有高贵的人格。──孙德生

 

5.虽然世事多变，但主耶稣的友谊永远不变。──荚尔

 

6.一个信主的人，不信的朋友一多，这个人定规失败。不是犯罪，就是属世。──倪柝声                

 

试炼

1.受试炼的时刻常常就是承受赐福的时刻。──戴德生

 

2.试炼是我在追求神的过程中训诲我的师傅。──马丁路德

 

恩赐

1.一点点的爱、一点点的恩典、一点点的真正敬畏神的心，都要比所有的恩赐来得更好、更美。──本仁约翰

 

2.聪明假如没有道德和敬畏神，爱慕神的心来保持均衡，便成为我们的咒诅。 ──宣信

 

眼泪

1.父神怀中所抱的，总是带着泪眼的孩子，祂的双臂常是为这样的人敞开。──施宁

 

2.灾难和眼泪，只是生活中的插曲，不是最精采的节目。──梅尔

 

3.每一滴悔罪的眼泪都必满了平安、充溢舒慰。──芬乃伦                

 

感恩

1.感恩的心越增加，爱神的心也越增加，当我们的心充满感恩的思想的时候，我们便要发神过于一切了。──王明道

 

2.我一直哭着没有鞋子穿，但等到我知道连双脚也没有的人，我又感觉到幸运之极了。──海伦海勒

 

3.一颗感谢的心决不会愤世嫉俗!──陶恕

 

4.不要为你所没有的抱怨……要珍惜你所拥有的。──朱德

 

5.我们必须要感谢的是那位施予者而不是感谢那些馈赠。──查理士 灵马

 

认罪悔改

 

1.生命里免不了有成串的错误，脚步走错最少的，并不一定是最好的基督徒；

改正错误，得胜错误，才是最好的基督徒。──罗柏孙

 

2.承认恶行是善行的开端。──希坡的奥古斯丁

 

3.认罪是得救的开始。──马丁路德

 

4.悔改最主要的障碍是自义。──施宁

 

5.悔改是以背向罪。──罗炳森师母

 

6.借着悔罪我们得洁净；借着怜悯，我们得装备；并借着对上帝真摰的渴慕，我们成为贵重的器皿。──朱利安娜

 

7.认罪是必须的。一个罪若不认，这个罪要终身跟着你。──倪柝声

 

8.没有一个信徒属灵到他不必认罪的地步。──倪柝声

 

9.谁先认罪谁先得福，谁先认罪谁伟大，谁先认罪谁胜利。──王明道                

 

怜悯

1.我们很幸福的时间，千万不要以为人人都是如此幸福；要想到并且记念他人的痛苦。──巴克莱

 

2.神怜悯我们，因此我们也当学习怜悯别人。 

同样地当我们感受被宽恕而非惩罚时，才会随时去宽恕别人。神已经怎样对待了我们，我们也有责任这样对待人。──潘霍华

 

3.切勿在你同遭的人遭受痛苦时，表现出不值得同情的样子；也许只因你满有信心，因此不予人以同情。

可是，你当直截了当地─不问它是否值得─施予同情。差它来的神，经由你，将它送给祂那需要的孩子。──布鲁克

 

4.你要记得，你站的每一个地位，主都与你同在，与你一同感觉，祂要施恩给你。祂深深的感觉你每一件难处，体会每一滴眼泪。让我们信靠祂，从祂得着安息。──倪柝声

 

谦卑

1.基督徒的谦卑不是自然而然的，我们要学习基督的榜样。

按着我们的本性，我们是骄傲、不甘作贱、好高鹜远、具有强烈的欲望。──高力富

 

2.如果你谨守一个谦卑、顺服的灵，祂必保守你。

在每一种情况下，谦卑都是有好处的，借着谦卑而生的受教之灵，将使得事事都变得容易。──芬乃伦

 

3.我愈在神里面成长，自己就变得愈小。──邦艾伦

 

4.谦卑乃在于不看自己比人强，也不愿别人看我比他强。──沙尔 法兰西斯

 

5.伪装的谦卑，其实是以另一个姿态出现的骄傲。──陶恕 6.        真正的谦卑是从来不会令人想到「要谦卑」。──莫林诺                

 

祷告

1.我们若常祷告，就越会祷告。我们应当借着祷告来学习祷告：借着继续祷告，来使祷告继续。──司布真

 

2.一些出于内心的倾心吐意，比用许多流畅而动听话语的祷告更有效果。──史可高

 

3.以祷告代替忧虑，以信心代替焦虑。──佚名

 

4.我心里不愿祷告的时候，正是我极需要跪下祷告的时候。──司布真

 

5.我们向上帝祷告祈求。不论怎么不会说话，只要发自真心，上帝都不会轻看，上帝永远接纳我们。──章佰斯

 

劝勉

1.话说得越温和，收的果效越大。──巴克莱 惧怕

 

2.惧怕是失败的首一步。──倪柝声 倚靠神

 

3.我的孩子，要信服神，不要疑惑祂。神是值得信靠的。──慕安得烈性(临终语)        

 

饶恕

1.每当你选择赦免，你就是选择在基督里的自由。──佚名

 

2.基督的国度乃是饶恕的国度。──马丁路德

 

3.原谅是一种施予，是对人所做的最大施予。──珍妮特 洛克比

 基督教名人名言

――劳威廉(William Law, 1686-1761)

虔诚的人不再照自己的意志生活，也不行世界的道路，只遵行上帝的旨意。

―― 查尔松

绝对性的道德诫命乃是自由的唯一保障。没有超越个人喜好的道德真理，人权就会土崩瓦解

――加尔文

灵命最重要的是信心；信心最重要的表现是祷告

――司布真

依赖人容易使人畏缩、依附，而信赖上帝则使人产生神圣的精神上的安静，使我们的灵魂得以圣化

――钟马田

假如你追求幸福，并为幸福而生活，你永远不会幸福

――加尔文

若是没有上帝的律法，人就会变成丛林中的野兽

――加尔文

良牧必是学者

――潘恩（William Penn）

人若不愿受上帝的统治，则必自取其祸，受暴君的奴役

――奥古斯丁

上帝颁布我们不能遵行的诫命，是要叫我们知道应当如何向他祈求

――奥古斯丁

如果没有正义，政权是什么？不过是有组织的强盗罢了

――奥古斯丁

如果你问我什么是上帝对我们的要求，我要告诉你，第一是谦卑，第二是谦卑，第三是谦卑。这不是说此外再无别的教训，而是因为如果在我们所有的行动之前没有谦卑，我们的努力将毫无意义。

――威克利夫

这圣经是为建立民有、民治、民享的政府赐下的

――加尔文

只有造就人的良心，使其敬畏上帝的人，才可以算得上是真正的神学家
――帕斯卡

智慧把我们带回童年

――马丁·路德

上帝面前人人平等

――瑞森格（Ernest C. Reisinger）

上帝的恩典绝不改变他公义的律法，而是赐给我们力量去遵行。十字架的精义是永恒的慈爱，而十字架的根基则是永恒的公义

――拉福·俄斯肯（Ralph Erskine）

不经过患难或争战的信心，是可疑的信心；因为真正的信心就是不断争战、摔跤的信心

――司布真

如果把上帝的律法视为上帝基于他的恩典所赐下的礼物，这样的人已经是蒙恩之人

――汤玛斯·华森（Thomas Watson）

悔改是来自上帝之灵的恩典，罪人由此有内在的心灵的谦卑和外在的生命的改变

――约翰·欧文

唯独真理才能得着人心，使其荣耀上帝。”

――约翰?6?1诺克斯(John Knox,c.1514-1572)

一个人与上帝同在，总是多数。”

――钟马田

我们所喜欢的并不是数字，而是真理和又真又活的上帝。”

――查里斯·司布真

有些试探会临到勤恳的人，而所有的试探都会攻击怠惰的人。”

――约翰?6?1欧文

那些按其本分而祷告的人，也必定会努力按他所祈祷的去生活。”

――汤玛斯?6?1华森

上帝造我们，使我们比天使微小一点，罪却使我们与魔鬼一样。”

――唐佑之

律法是神学与伦理二者相同的标准，涵义实在丰富。律法与恩典，尤其必须阐明，不可将两者分开，成为旧约与新约不同的重点。事实上律法与恩典是不可
或分的，律法以恩典为前提，在法典中可以寻得这样的逻辑。恩典是律法的性质与内容，宣讲者应将旧约与新约合并论述以求真理的全面性与合一性

――伯克富

人在多大程度上回应上帝的统治，顺服国度的律法，事情就会在多大程度上自然而然。假如那些现在已经成为上帝的国度的子民，在生活的各个领域中，确确实实地遵行上帝国度的律法，世界就会变得截然不同，甚至很难辨识。可惜，事实并非如此

――亚伯拉罕·凯伯尔

在人的整个生命中，唯独基督有完全的主权；没有一寸土地不是属于他的，人都不能说：这是我的

――范泰尔

我想表明的是，在基督教伦理和非基督教伦理之间的真正不同之处远远要比想像得更大„„是神律论（theonomy），还是自法论（autonomy），二者必居其

一。想逃避上帝，逃到宇宙之中寻求永恒的律法，是徒劳无益的

――约翰·欧文

在这个世界上，上帝对人最大的审判，就是使人心刚硬

――司布真

如果我们忠心遵行上帝的律法，我们就可以确信，上帝必信实地成全他的应许。如果我们不忘记上帝的律法，上帝必不会忘记我们

――司布真

把上帝的律法视为上帝基于他的恩典而赐下的礼物，这样的人已经是蒙恩之人

――司布真

圣洁的生活是一个旅程，是持续地不断前进，是安静地向前进发，永不中止。以诺与上帝同行。义人总是渴慕更上一层楼，因此他们不断前进。义人绝不会无所事事，因此他们既不会蒙头大睡，也不会到处闲逛，而是持续不断地向他们所渴慕的目标前进。他们既不会匆匆忙忙，也不会担心忧虑，更不会慌慌张张，他们镇定自若地前行，坚定地走向天堂；对于如何行事为人，他们从不迷惑，因为他们有完美的准则，这是他们在人生的旅程中高高兴兴地遵守的。对于他们而言，主的律法绝不是令人厌烦的；上帝的诫命绝不是难以遵行的，在他们看来，律法的限制绝不是专横的。对于他们而言，上帝的律法绝不是不可能遵行的法条，理论上让人羡慕称好，但实际上是荒谬难行的；他们在生活中以上帝的律法为标准，行走在上帝的律法的规模中。他们时常考察上帝的律法，并不是作为纠正他们偏行的工具，而是作为他们每日航行的航海图，人生旅程的道路指南
――亚他那修

当太阳升起来的时候，黑暗就不会继续横行了，任何残留的黑暗都会被驱散。同样，现在上帝之道已经显现，偶像崇拜的黑暗也不会再继续肆虐了。全世界每个地方都会被他的教导照亮

――司提反·查诺克（Stephen Charnock）

一个人在神学上可能拥有一些神学上的知识，但在属灵的方面仍然是蒙昧无知

――加尔文

他们认为只要对宗教有热情就足够了，不管这热情是何等荒诞无稽。但是，他们并没有认识到，真正的宗教当合乎上帝的旨意，以上帝的旨意为普世性的法则。他们也没有意识到，上帝是始终不变的，他绝不是根据人的荒唐而改变的幽灵或幻境。我们可以清楚地看到，迷信嘲笑上帝，同时却伪装是在努力取悦上帝。罪人认为上帝的法度与他自己毫无关系。因此，对于上帝自己所规定和吩咐的使他悦纳的法度，迷信或是予以藐视，或是公开地拒绝。所以，他们自己就设立种种虚妄的仪式来敬拜上帝，其实他们雕塑粉饰的不过是自己的胡言乱语而已

――路斯德尼

传福音绝不应当局限于使人归正„„重生当然是第一步，但是，如果我们把传福音局限于归正，刚刚得赎的罪人往往就会得出这样的印象：他之所以得救是为着他自己的缘故，而不是为了上帝的缘故。这当然是错误的。传福音当把三一上帝对个人及其整个生活和世界的全部要求讲明。人得救不仅是为了享受天堂，而是尽心、尽意、尽力侍奉上帝，并爱人如己。这就是说，要先求上帝的国和上帝的义。我们的得救目的不在于我们自身，而是上帝的国度和我们对他的侍奉。得救使我们回到我们治理的使命。这始于重生，并在成圣和治理的过程中继续进行

－－路斯德尼

自由的问题首先是主权和责任的问题。谁是至高无上的，人到底向谁负责？主权的本源也就是自由的本源。假如主权寓于上帝，人只不过是施行出来，那么，不管是统治者还是被统治者，都当向上帝负责，惟独他是自由的本源。但是，假如主权是寓于国家，不管是君主制还是民主制，在国家法律之外，人就没有任何上诉的地方，而国家的法律也就成为伦理的本源。在这种情况下，人就得完全向国家的法律次序负责，他所拥有的权利只能是国家选择赐予他的。英文中

comprehend一词既有‘包含’的意思，也有‘理解’的意思。人所包含的也就是我们对人的认识之源。假如人是国家的受造物，那么就要根据国家来理解人。亚里斯多德所说的人，是社会性的动物，绝不会超越他的政治次序。然而，基督徒是上帝按其形象造的，除了上帝永恒的预旨和次序之外，任何东西都是无法包容这样的人的。如果不是根据上帝自己的条件来理解，也是无法理解这样的人的。因此，根据人的条件是无法理解人的，只有根据上帝的条件，才能对人有正确的认识。绝对的君主制和民主制，都不过是国家主义而已，只是名称不同罢了。当偶像崇拜和反基督教运动盛行的时候，这种绝对的君主制或民主制也随之而复兴，不管它们在外表上是如何称呼自己
――Lewis Smedes

这就是说要先求上帝的国，上帝的义。因此，我们的救赎有超越我们自身的目的：这就是上帝的国，这就是我们对他的侍奉。我们的救赎所恢复的是上帝起初给人的治理的呼召，始于重生，并在成圣与治理中继续

――范泰尔

有两种自由观，一是圣经中所启示的自由观，是以人的受造性这一事实为基础的；一是自主意义上的自由观，使人成为自身的律法

――宾克

每个未重生的罪人都有一颗法利赛人的心；同样，每个未重生的罪人也都有一颗反律主义的心

――巴文克

在宗教与道德方面，人并不是自主的。人并非是他自己的赐律者，同时他也不能为所欲为。乃是说，上帝是他唯一的赐律者与审判者

――查里斯·司布真

遵行上帝的律法，就是与上帝同行，也必得蒙上帝的祝福

――路斯德尼

上帝的律法就是自由，宗教上的反律主义则是奴役的保证，因为它所高抬的是罪人的法律，使罪人的法律超越上帝的律法，为人蔑视上帝的律法，提供了神圣的理由

――爱德华兹

正是藉着把伪宗教与真宗教混合在一起，不加分别，魔鬼才一直极大地拦阻基督的国度的事业的进展。自从基督教会建立以来。魔鬼主要就是使用这个手段来破坏真宗教的复兴

――加尔文

当我们阅读世俗作者所写的东西时，仍见到令人钦佩的真理的亮光。这提醒我们，虽然人类理性已经大大偏离、扭曲了原初的纯正，但仍然有来自其创造者的奇妙恩赐

――瓦顿（Samuel E. Waldron）

今天对历史性改革宗信仰最大的危险就是攻击其对上帝律法的强调。根据改革宗和清教徒的传统，上帝的道德律，正如在基督的教导中所概括的那样，对各个地方的所有人都有约束力，直到基督再来的日子。日益猖獗的反律主义者对这一重要的教义百般攻击，他们所威胁的恰恰就是合乎圣经的基督教的根基。
** 名言
1.“不靠圣经，人就不能准确地统治世界。”——美第一任总统：华盛顿

2.“没有圣经，我们就不能明辨是非。我相信圣经是天主赐给人类最好的礼物。” ——美16任总统：林肯

3.“圣经是人生意义启示的最高峰。”——美28任总统：威尔逊

4.“圣经是我们力量的泉源，我认为对圣经作彻底的研究，是对人人都有益的自由教育。” ——美32任总统：罗斯福

5.“对我们而言，圣经的最高意义，是独一永恒属灵真理的储藏所。”——美34任总统：艾森豪威尔

6.“我们可以放心依靠在这坚固无比的圣经磐石上。”——英国首相：丘吉尔

7.“圣经是世界上所能有的最宝贵的一部书。”——英皇乔治五世eorge V

8.“我们认为天主所赐的圣经最具崇高的哲理。我发现圣经比任何其它通俗的历史，有更多确切可靠的凭据。”——牛顿11.“圣经是全世界空前绝后、最好的一部书。”——狄更斯

12.“在这本令人敬畏的圣经里，蕴藏着奥秘中的奥秘。”——司各脱

13.“人类戏剧的全局，尽在圣经之中；它是群书之冠。”——德国诗人；海尼


16.“我感谢你，造物主，因为你已在你的创造中给了我这份喜乐，我在你手作成的工中喜乐。现在，我已完成我蒙召应作的工作。在其中我已尽用了你赋予我心智的一切才能。以我狭窄的心智对你无限丰盛的理解，我将向那些将要读到我的话语的人彰显你的工作的伟大。”——凯普勒

17.“我心灵很平静。”并引用《圣经》说：“因为知道我所信的是谁，也深信祂能保全我所交付祂的，直到那日。”——电解原理发明人法拉第临终所言

18.“在我生平的发现中，最有价值的，是认识了主耶稣基督。”——热力学第二定律的发现作出重要贡献的科学家卡尔文（William Thomas Kelvin）在一次，有个学生问他一生中最大的发现是什么所言！

19.“人得救的条件不是要反对什么，而是接受天主白白的恩典。只要你肯，仍然可以在科学里爱天主、敬拜天主。” ——化学家波义耳（Robert Boyle）

20.“如果承认天主的存在，这个信心实比一切宗教的奇迹更为超奇，不可思议。如果我们有了这种信心，这种悟性，那便不能不对天主下跪，肃然敬拜了。” —— 世界公认的对人类医疗卫生贡献极大的微生物学的创始者法国化学家巴斯德（Louis Pasteur）21.“有两种人会认识天主，一种是身处尊贵或卑微，内中常存谦卑的心；第二种是，只要真理，不管反对的人。” ——英年早逝的法国另一位著名的科学家巴斯噶（Blaise Pascal）完成投影几何的名著，并先后发明计算器、晴雨表和水压机等

22.“我获得宗教，走的是一条难路，而我以为这是唯一的路；我觉得没有任何其他的路是更妥当的，因为宗教自始至终是个人面对那个令人震惊的天，是一种他和天主的事；它是一种从个人内心发出来的东西，不能由任何人来‘给与’。”——林语堂

23.“天主在这个时代还行神迹吗？是的！科学知识来自天主，放在我们心中，使我们能够了解。过去，祂把异象放在先知的梦中，现在祂把知识放在人的心中，使人能建立理论以说明这个世界的真实。人的理解心智，是天主创造的。”——凯尔文（热力学第二定律）

24.“有了很强的历史证据，加上千千万万基督徒的见证，也不能说服我。因为我要亲自去体验、证实我可以与天主建立的个人关系。那么，我需要的是怎样的证据呢？很少有人像宗徒圣保禄，突然看见属灵的事实如刺眼的光芒，照亮了整个信仰的心田。多数人走向信仰的过程比较长远，就像人与人的关系一样，一见锺情到底比较少，多数人是逐渐地认识到天主的真实的。所以，我个人的论点包括历史的证据，历代教会的经验，再加上我个人的体验，都是贯穿一致的体系。有了信仰的观点，历史的基础是否重要呢？有人认为关系不大，他们觉得信心可以胜过历史而独存。但大多数的基督徒，连我在内，却认为必须有历史的根基，否则信仰不能成立。正如圣保禄宗徒在初期教会就说：'若基督没有复活，我们所信的便是枉然。你们所信的也是枉然'（林前十五14）。历史的基础与信心的经验并驾齐驱，相辅相成，缺一不可。” ——英国当代著名的大气物理学家霍顿（John Houghton）在谈到自己的信仰时所言！

25.“我要逃避天主，如同逃避瘟疫一样。我恨天主，我要对天主说：我是无法被祂感动的一位。”十年后的一天，他把一只被捏死的跳蚤放到显微镜下观察。“啊！我不禁赞赏跳蚤的美，”事后他写道，“ 跳蚤毛的结构，排列次序，不只是一种艺术的美，我看到一种天主圣的美，一种信仰的美。”——自称是“圣神的绝缘体”的人，藉着一只跳蚤，回到了天主面前的英国科学家虎克(Robert Hooke)所言！（制造第一台显微镜、第一台真空抽气机、第一支水银温度计、第一架天平等）

26.“无限超越的圣神，在这些细小的细节上启示祂自己，而我们甚至可以用我们脆弱微小的头脑来了解。我的宗教信仰即由对祂诚心的崇敬而构成的。我深深地相信有一种难以理解的宇宙显明的、超越的理智力量的存在，这种感受构成我对天主的观念。”——爱因斯坦

27.“我认为每一个原子必由某种智慧所掌管，所以能千变万化，成造化之妙。这种智慧乃是从一个比我们更伟大的能力而来。天主的存在，在我是几乎可以用化学来加以证明的。” ——美国大发明家爱迪生（Thomas Alva Edison）

28.“我深信有一位全智全能的、充满万有的、至高至尊的天主的存在。”——爱迪生的座右铭

29.“我多次提及天主启示的两本书：《大自然》及《圣经》。《圣经》特别藉着耶稣启示天主自己。对我来说，最能激发敬拜之心的经验是同时默想这两种奇妙的启示。当我翻阅一页页的彩色天文图片，看着那些通过望远镜或太空船拍摄的行星和星云，或者欣赏那从太空实验室或同步卫星自动相机所拍摄的色彩变幻的地球时，我看见宇宙的浩大和太空运作之精妙。我的理性饱受激荡，同时我的感情和想象力也受这些科学观察的激动，我不得不感到惊叹和谦卑”——曾任牛津大学大气物理系系主任、英国国家气象局兼太空中心国家地球观测计划董事会董事长的霍顿博士心灵感触！

30.“无论你在何处，请暂时停下来，向天主表示感谢吧！”——美国阿波罗11号的太空人艾德林在月球上通过卫星转播站向人类发出呼吁！

31.“当我们飞向月球时，身后的地球最初还可以清晰地看到海洋、白云、和山脉，美丽极了，就像圣诞树上的装饰。但四个小时后，地球却小得像篮球，不久又缩小成为棒球、乒乓球……这时我才突然发觉自己是这样快地离开地球，内心的感触真是无法形容。……天主既然应许我安然返回地面，是要我与各位共享一件事情：天主多么伟大，人多么渺小，他也充满了爱。我有独特的权利看见天主奇妙的创造，因此天主在我身上有特别的旨意，要我对男女老少传讲：天主爱世上每一个人，甚至将祂的独生爱子耶稣基督赐给我们”——阿波罗15号的太空人欧文上校完成此次飞行后，突然向太空总署递交了辞呈到各处传讲天主的福音所说

32.“说实在的，我现在把如何为主而活的事情看得比我参加月球登陆计划的工作更为重要。”——美国水星计划及双子星计划的总执行者勃克博士在甘乃迪角主持太空船发射后第二天，他便搭飞机回到圣路易斯城，当天晚上仍带领查经班不误时所言！

33.“我个人认为太空时代的确给予人许多好处，它是加强我属灵生命的一大因素；现在我每天读经更勤。以前我常有‘到底有没有天主’的问题，现在所想的已变为：天主在我们身上有什么目的？我如何才能为基督做更好的见证？在我和许多科学家的交往中，还没有见到一个纯粹的无天主论者。自从我们进入太空后，我觉察到许多同事们更加深了他们的信仰，很少有一天不听到人们谈及灵性问题。在以往数月里，我意识到太空人员有一种心灵的觉醒。现在他们自由地谈论属灵的事情，有的甚至告诉我，他们已经接受了基督教信仰，这是我以前做梦也想不到的。”——美国水星计划及双子星计划的总执行者勃克博士在回答记者关于科学与信仰的关系采访时如实回答！

34.“我们所找到的是宇宙诞生的证据，”“这好像睁开眼睛看到天主一样。其中的秩序如此精美，如此均衡雅致，使我们想到宇宙的背后必然有其设计，” ——美国著名的太空物理学家史莫特博士（George Smoot）发现，COBE卫星所搜集的三亿六千万个测量数据中，只有万分之三的差异时，史莫特自己则公开的宣称！

35.“发明的灵感，有时就像圣神的气息一样，我们不知道它从哪里来，也不知它往哪里去。它忽然来了，吹经我们多年努力、熟悉的窗口，进入我们意想不到之处。发明有时就需要这种幸运的一触，这种偶然巧合的一推。在千头万绪缠绕的中心，忽然看清那位大创造者的本意。我知道我做的每一件事，无论是蓄意的或不经意的，都是在天主的影响下，因此我们更该竭力地去做”——英国科学家虎克给牛顿的信中所言！

36.“天文学带领我们看到一件独特的事件，那就是：一个从无有中被造出来的宇宙；这宇宙有精密的平衡，供应着容许生命存在的条件；同时，这宇宙背后是有一个根本计划，也可以说是一个超然的计划。”—— 发现宇宙背景辐射而获诺贝尔奖的物理学家彭西亚(Arno Penzias)所言！

37.“当中世纪的天主学家，用亚里士多德的观点定睛仰望夜空时，他们看见是天使使宇宙和谐运作。今天，现代宇宙学家则像爱因斯坦一样，他们凝视着同样的天空，却看见天主的作为透过大自然的常规表露出来，而非透过天使……当我们面对宇宙的规律和美丽，以及自然奇妙的巧合时，我们很容易有一种冲动，要用信心跨过科学进到宗教去。我肯定很多物理学家曾这样想过，我只希望他们会坦白承认。”——宇宙学家罗夫曼(Tony othman)

38.“一位超智慧者在玩弄着物理、化学及生物学。”—— 原宣称“宇宙就是一切”反对基督教的英国天文物理学家荷尔(Fred Hoyle)在研究时无奈地说！

39.“我们天文学家们是至高无上之天主在大自然方面的代理人。大自然提供我们研究的机会，并非让我们自命不凡，而是为了荣耀天主！”—— 天文学家凯普勒

40.“人类承认自己所知的有限，是科学最关键的原理。” ——热力学家凯尔文

41.“人的宗教性是与生俱来无法逃避的。因为宇宙超过科学知识的范畴，非人类智慧所能窥测。这人类智慧不能窥测的范畴便是宗教的领域了。……人类智慧有限，不能完全明白宇宙终极的奥秘。……真正的现代科学，应当服从天主、学习谦卑。” ——诺贝尔物理奖的科学家米立根（Millikan）

42.“当我们将天主的两种启示，揉合一起来看事物，好像用两只眼睛看见的立体感，新的深度和真实就出现了，新的属灵境界也显而易见了。” ——霍顿博士

43.“对于一个靠理性的力量而生活的科学家而言，这个故事的结局像是个恶梦。他一直在攀登无知之山，并且快要到达巅峰。当他攀上最后一块石头时，他竟受到一群天主学家的欢迎，他们已经在那里恭候无数个世纪了。” ——美国国家航空及宇宙航行局（NASA）、太空研究院的创始人泽斯爵博士（Robert Jastrow）在《天主与天文学家》(God and the Astronomers)一书中所说！

44.“将科学局部的知识视为人类全部的知识，将科学有限的范围视为唯一的境界，将科学相对的学说视为绝对的真理，并以为在科学之外的其他学问都没有研讨的价值。以为科学可以解决人生一切问题，所以高唱‘科学万能’。这便是科学主义。” ——何天择博士在《人从那里来》一书中，对科学主义这样描述时所说！

45.“不管任何环境，要守住耶稣基督救赎的真理和最大的诫命——爱人如己。”——牛顿晚年(1707年谢世
* firefox
firebug plugin addon
** headless
http://stackoverflow.com/questions/5370762/how-to-hide-firefox-window-firefox-webdriver
I used xvfb to solve the problem like this.

First, install Xvfb:

# apt-get install xvfb
on Debian/Ubuntu; or

# yum install xorg-x11-Xvfb
on Fedora/RedHat. Then, choose a display number that is unlikely to ever clash (even if you add a real display later) – something high like 99 should do. Run Xvfb on this display, with access control off:

# Xvfb :99 -ac
Now you need to ensure that your display is set to 99 before running the Selenium server (which itself launches the browser). The easiest way to do this is to export DISPLAY=:99 into the environment for Selenium. First, make sure things are working from the command line like so:

$ export DISPLAY=:99
$ firefox
or just

$ DISPLAY=:99 firefox
Below there is a link that helped me
http://www.alittlemadness.com/2008/03/05/running-selenium-headless/
** cookie                                                  :cookie:expired:
https://www.raymond.cc/blog/how-to-extend-firefox-and-internet-explorer-cookie-expiration-date/
or use firebug to modify
http://blog.petersondave.com/cookies/Session-Cookies-in-Chrome-Firefox-and-Sitecore/
*** TODO why firefox could extend the cookie after expire but firefox won't
** export cookie
https://addons.mozilla.org/en-US/firefox/addon/export-cookies/
Exports all cookies to standard cookies.txt file, that is in the same format as IE cookie export makes.
Very useful for WGET --load-cookies option.
This extension is written in repalce of old allcookies extension (http://addons.mozilla.org/ru/firefox/addon/2208) that seems not to work with FireFox 3.
Also added a feature: now you can choose where to save the result file.

------------ Description --------------------------
The mandatory companion tool for downloading sites with WGET
A very minimum extension : no psychedelic design. Just the needed feature.

Why you need it : Many web sites are protected by either
- authentification forms
- vicious access rules like "you must first see some introductory or advertisement pages"

Such sites can't be downloaded with the well known WGET tool

Export Cookies is the answer to this kind of restrictions.

-------- How it works ------------------
A typicall scenario to download a web site with WGET becomes:
 using Firefox, connect to the web sites, go through all the authentification forms or preliminary pages that are required
 execute Export Cookies (just a simple item added in Firefox Tools menu ) to make cookies.txt file
 launch wget
wget --load-cookies=cookies.txt http://foo.com
** profile
create profile, run the following command
firefox -P

cd .mozilla/firefox 
 rm -Rf 56018125
 cp -R mwad0hks.default 56018125

 rm -Rf 65013716
 cp -R mwad0hks.default 65013716
** selenium
https://github.com/SeleniumHQ/selenium/blob/master/java/CHANGELOG
** tor
http://stackoverflow.com/questions/22978074/using-selenium-webdriver-with-tor
*** installation
on ubuntu just run the command apt-get to install
*** configuration
**** torrc location
run the tor
and then run 
ps -ef|grep tor|grep -v java 
that command will show the parameters used by tor

The following is to search some folder, but might not be used by the tor
just search torrc under the unpacked folder, like the following
/data/tor-browser_en-US/Browser/TorBrowser/Data/Tor/torrc
**** enable control port
sudo apt-get install python-stem

https://stem.torproject.org/faq.html
https://www.thesprawl.org/research/tor-control-protocol/
https://tor.stackexchange.com/questions/2178/why-does-tor-browser-include-multiple-torrc-files
/data/tor-browser_en-US/Browser/TorBrowser/Tor $ ./tor --hash-password "my_password"
16:F18DE06B7432D86C601947B54468934EE8E3BD2141DEE0F2B917D00C88

/data/tor-browser_en-US/Browser/TorBrowser/Tor $  ./tor --hash-password "test1234"
16:ADDE4F3882DBF5D66063A012894358FEA222E5020EACE5CBEBC4F72DF1



HashedControlPassword 16:F18DE06B7432D86C601947B54468934EE8E3BD2141DEE0F2B917D00C88


Enabling Control Port

First enable control port, which is disabled by default. There are several ways we can enable it:

    Edit torrc configuration file (normally located in /etc/tor/torrc on unix systems). Uncomment ControlPort line as follows:

    ## The port on which Tor will listen for local connections from Tor
    ## controller applications, as documented in control-spec.txt.
    ControlPort 9051

    Enable control port using --controlport flag:

    tor --controlport 9051
**** steps to control
** Lantern
after install it, it will open a proxy at http 127.0.0.1 port:8787
https://gochrome.info/
* dropbox
** set system proxy for dropbox in mint
http://www.ictsteps.com/2013/10/how-to-use-proxy-setting-with-linux-mint.html
inside of .bashrc
export http_proxy=http://127.0.0.1:8787/
** download 
Dropbox Headless Install via command line
The Dropbox daemon works fine on all 32-bit and 64-bit Linux servers. To install, run the following command in your Linux terminal.

32-bit:

cd ~ && wget -O - "https://www.dropbox.com/download?plat=lnx.x86" | tar xzf -
64-bit:

cd ~ && wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
Next, run the Dropbox daemon from the newly created .dropbox-dist folder.

~/.dropbox-dist/dropboxd
If you're running Dropbox on your server for the first time, you'll be asked to copy and paste a link in a working browser to create a new account or add your server to an existing account. Once you do, your Dropbox folder will be created in your home directory. Download this Python script to control Dropbox from the command line. For easy access, put a symlink to the script anywhere in your PATH.
** start dropbox
cd /data/.dropbox-dist/
oracle@SomeHost /data/.dropbox-dist $ ./dropboxd
http://www.microsoft.com/security/portal/threat/encyclopedia/entry.aspx?name=HackTool%3aWin32%2fKeygen
